(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{1549:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return x});var a=t(16),o=t(0),l=t.n(o),i=t(926),r=t(899),c=t(746),s=t(848),m=t(849),u=t(1205),p=t(893),d=t(1098),g=t(917),f=t(1550),h=t.n(f),C=t(998),b=t.n(C),y=t(131),v=t(351),E=["username@gmail.com","user02@gmail.com"],D=Object(i.a)({avatar:{backgroundColor:v.a[100],color:v.a[600]}});function T(e){var n=D(),t=e.onClose,a=e.selectedValue,o=e.open;function i(e){t(e)}return l.a.createElement(g.a,{onClose:function(){t(a)},"aria-labelledby":"simple-dialog-title",open:o},l.a.createElement(d.a,{id:"simple-dialog-title"},"Set backup account"),l.a.createElement(s.a,null,E.map(function(e){return l.a.createElement(m.a,{button:!0,onClick:function(){return i(e)},key:e},l.a.createElement(u.a,null,l.a.createElement(c.a,{className:n.avatar},l.a.createElement(h.a,null))),l.a.createElement(p.a,{primary:e}))}),l.a.createElement(m.a,{button:!0,onClick:function(){return i("addAccount")}},l.a.createElement(u.a,null,l.a.createElement(c.a,null,l.a.createElement(b.a,null))),l.a.createElement(p.a,{primary:"add account"}))))}function x(){var e=l.a.useState(!1),n=Object(a.a)(e,2),t=n[0],o=n[1],i=l.a.useState(E[1]),c=Object(a.a)(i,2),s=c[0],m=c[1];return l.a.createElement("div",null,l.a.createElement(y.a,{variant:"subtitle1"},"Selected: ",s),l.a.createElement("br",null),l.a.createElement(r.a,{variant:"outlined",color:"primary",onClick:function(){o(!0)}},"Open simple dialog"),l.a.createElement(T,{selectedValue:s,open:t,onClose:function(e){o(!1),m(e)}}))}},1551:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const { onClose, selectedValue, open } = props;\n\n  function handleClose() {\n    onClose(selectedValue);\n  }\n\n  function handleListItemClick(value) {\n    onClose(value);\n  }\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <List>\n        {emails.map(email => (\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\n            <ListItemAvatar>\n              <Avatar className={classes.avatar}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={email} />\n          </ListItem>\n        ))}\n\n        <ListItem button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"add account\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function SimpleDialogDemo() {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n      <br />\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n    </div>\n  );\n}\n"},1552:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return p});var a=t(16),o=t(0),l=t.n(o),i=t(899),r=t(917),c=t(1021),s=t(1009),m=t(1203),u=t(1098);function p(){var e=l.a.useState(!1),n=Object(a.a)(e,2),t=n[0],o=n[1];function p(){o(!1)}return l.a.createElement("div",null,l.a.createElement(i.a,{variant:"outlined",color:"primary",onClick:function(){o(!0)}},"Open alert dialog"),l.a.createElement(r.a,{open:t,onClose:p,"aria-labelledby":"alert-dialog-title","aria-describedby":"alert-dialog-description"},l.a.createElement(u.a,{id:"alert-dialog-title"},"Use Google's location service?"),l.a.createElement(s.a,null,l.a.createElement(m.a,{id:"alert-dialog-description"},"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.")),l.a.createElement(c.a,null,l.a.createElement(i.a,{onClick:p,color:"primary"},"Disagree"),l.a.createElement(i.a,{onClick:p,color:"primary",autoFocus:!0},"Agree"))))}},1553:function(e,n){e.exports='import React from \'react\';\nimport Button from \'@material-ui/core/Button\';\nimport Dialog from \'@material-ui/core/Dialog\';\nimport DialogActions from \'@material-ui/core/DialogActions\';\nimport DialogContent from \'@material-ui/core/DialogContent\';\nimport DialogContentText from \'@material-ui/core/DialogContentText\';\nimport DialogTitle from \'@material-ui/core/DialogTitle\';\n\nexport default function AlertDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant="outlined" color="primary" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby="alert-dialog-title"\n        aria-describedby="alert-dialog-description"\n      >\n        <DialogTitle id="alert-dialog-title">{"Use Google\'s location service?"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id="alert-dialog-description">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color="primary">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color="primary" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n'},1554:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return g});var a=t(16),o=t(0),l=t.n(o),i=t(899),r=t(917),c=t(1021),s=t(1009),m=t(1203),u=t(1098),p=t(466),d=l.a.forwardRef(function(e,n){return l.a.createElement(p.a,Object.assign({direction:"up",ref:n},e))});function g(){var e=l.a.useState(!1),n=Object(a.a)(e,2),t=n[0],o=n[1];function p(){o(!1)}return l.a.createElement("div",null,l.a.createElement(i.a,{variant:"outlined",color:"primary",onClick:function(){o(!0)}},"Slide in alert dialog"),l.a.createElement(r.a,{open:t,TransitionComponent:d,keepMounted:!0,onClose:p,"aria-labelledby":"alert-dialog-slide-title","aria-describedby":"alert-dialog-slide-description"},l.a.createElement(u.a,{id:"alert-dialog-slide-title"},"Use Google's location service?"),l.a.createElement(s.a,null,l.a.createElement(m.a,{id:"alert-dialog-slide-description"},"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.")),l.a.createElement(c.a,null,l.a.createElement(i.a,{onClick:p,color:"primary"},"Disagree"),l.a.createElement(i.a,{onClick:p,color:"primary"},"Agree"))))}},1555:function(e,n){e.exports='import React from \'react\';\nimport Button from \'@material-ui/core/Button\';\nimport Dialog from \'@material-ui/core/Dialog\';\nimport DialogActions from \'@material-ui/core/DialogActions\';\nimport DialogContent from \'@material-ui/core/DialogContent\';\nimport DialogContentText from \'@material-ui/core/DialogContentText\';\nimport DialogTitle from \'@material-ui/core/DialogTitle\';\nimport Slide from \'@material-ui/core/Slide\';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction="up" ref={ref} {...props} />;\n});\n\nexport default function AlertDialogSlide() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant="outlined" color="primary" onClick={handleClickOpen}>\n        Slide in alert dialog\n      </Button>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby="alert-dialog-slide-title"\n        aria-describedby="alert-dialog-slide-description"\n      >\n        <DialogTitle id="alert-dialog-slide-title">{"Use Google\'s location service?"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id="alert-dialog-slide-description">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color="primary">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color="primary">\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n'},1556:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return d});var a=t(16),o=t(0),l=t.n(o),i=t(899),r=t(896),c=t(917),s=t(1021),m=t(1009),u=t(1203),p=t(1098);function d(){var e=l.a.useState(!1),n=Object(a.a)(e,2),t=n[0],o=n[1];function d(){o(!1)}return l.a.createElement("div",null,l.a.createElement(i.a,{variant:"outlined",color:"primary",onClick:function(){o(!0)}},"Open form dialog"),l.a.createElement(c.a,{open:t,onClose:d,"aria-labelledby":"form-dialog-title"},l.a.createElement(p.a,{id:"form-dialog-title"},"Subscribe"),l.a.createElement(m.a,null,l.a.createElement(u.a,null,"To subscribe to this website, please enter your email address here. We will send updates occasionally."),l.a.createElement(r.a,{autoFocus:!0,margin:"dense",id:"name",label:"Email Address",type:"email",fullWidth:!0})),l.a.createElement(s.a,null,l.a.createElement(i.a,{onClick:d,color:"primary"},"Cancel"),l.a.createElement(i.a,{onClick:d,color:"primary"},"Subscribe"))))}},1557:function(e,n){e.exports='import React from \'react\';\nimport Button from \'@material-ui/core/Button\';\nimport TextField from \'@material-ui/core/TextField\';\nimport Dialog from \'@material-ui/core/Dialog\';\nimport DialogActions from \'@material-ui/core/DialogActions\';\nimport DialogContent from \'@material-ui/core/DialogContent\';\nimport DialogContentText from \'@material-ui/core/DialogContentText\';\nimport DialogTitle from \'@material-ui/core/DialogTitle\';\n\nexport default function FormDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant="outlined" color="primary" onClick={handleClickOpen}>\n        Open form dialog\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby="form-dialog-title">\n        <DialogTitle id="form-dialog-title">Subscribe</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To subscribe to this website, please enter your email address here. We will send updates\n            occasionally.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin="dense"\n            id="name"\n            label="Email Address"\n            type="email"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color="primary">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color="primary">\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n'},1558:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return y});var a=t(16),o=t(0),l=t.n(o),i=t(9),r=t(899),c=t(917),s=t(1098),m=t(1009),u=t(1021),p=t(465),d=t(1071),g=t.n(d),f=t(131),h=Object(i.a)(function(e){return{root:{margin:0,padding:e.spacing(2)},closeButton:{position:"absolute",right:e.spacing(1),top:e.spacing(1),color:e.palette.grey[500]}}})(function(e){var n=e.children,t=e.classes,a=e.onClose;return l.a.createElement(s.a,{disableTypography:!0,className:t.root},l.a.createElement(f.a,{variant:"h6"},n),a?l.a.createElement(p.a,{"aria-label":"close",className:t.closeButton,onClick:a},l.a.createElement(g.a,null)):null)}),C=Object(i.a)(function(e){return{root:{padding:e.spacing(2)}}})(m.a),b=Object(i.a)(function(e){return{root:{margin:0,padding:e.spacing(1)}}})(u.a);function y(){var e=l.a.useState(!1),n=Object(a.a)(e,2),t=n[0],o=n[1],i=function(){o(!1)};return l.a.createElement("div",null,l.a.createElement(r.a,{variant:"outlined",color:"secondary",onClick:function(){o(!0)}},"Open dialog"),l.a.createElement(c.a,{onClose:i,"aria-labelledby":"customized-dialog-title",open:t},l.a.createElement(h,{id:"customized-dialog-title",onClose:i},"Modal title"),l.a.createElement(C,{dividers:!0},l.a.createElement(f.a,{gutterBottom:!0},"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros."),l.a.createElement(f.a,{gutterBottom:!0},"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor."),l.a.createElement(f.a,{gutterBottom:!0},"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.")),l.a.createElement(b,null,l.a.createElement(r.a,{onClick:i,color:"primary"},"Save changes"))))}},1559:function(e,n){e.exports="import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\n        Open dialog\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Modal title\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n          </Typography>\n          <Typography gutterBottom>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n            lacus vel augue laoreet rutrum faucibus dolor auctor.\n          </Typography>\n          <Typography gutterBottom>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n            auctor fringilla.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Save changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"},1560:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return D});var a=t(16),o=t(0),l=t.n(o),i=t(926),r=t(899),c=t(917),s=t(893),m=t(849),u=t(848),p=t(910),d=t(914),g=t(900),f=t(465),h=t(131),C=t(1071),b=t.n(C),y=t(466),v=Object(i.a)(function(e){return{appBar:{position:"relative"},title:{marginLeft:e.spacing(2),flex:1}}}),E=l.a.forwardRef(function(e,n){return l.a.createElement(y.a,Object.assign({direction:"up",ref:n},e))});function D(){var e=v(),n=l.a.useState(!1),t=Object(a.a)(n,2),o=t[0],i=t[1];function C(){i(!1)}return l.a.createElement("div",null,l.a.createElement(r.a,{variant:"outlined",color:"primary",onClick:function(){i(!0)}},"Open full-screen dialog"),l.a.createElement(c.a,{fullScreen:!0,open:o,onClose:C,TransitionComponent:E},l.a.createElement(d.a,{className:e.appBar},l.a.createElement(g.a,null,l.a.createElement(f.a,{edge:"start",color:"inherit",onClick:C,"aria-label":"close"},l.a.createElement(b.a,null)),l.a.createElement(h.a,{variant:"h6",className:e.title},"Sound"),l.a.createElement(r.a,{color:"inherit",onClick:C},"save"))),l.a.createElement(u.a,null,l.a.createElement(m.a,{button:!0},l.a.createElement(s.a,{primary:"Phone ringtone",secondary:"Titania"})),l.a.createElement(p.a,null),l.a.createElement(m.a,{button:!0},l.a.createElement(s.a,{primary:"Default notification ringtone",secondary:"Tethys"})))))}},1561:function(e,n){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open full-screen dialog\n      </Button>\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Sound\n            </Typography>\n            <Button color=\"inherit\" onClick={handleClose}>\n              save\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <List>\n          <ListItem button>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItem>\n          <Divider />\n          <ListItem button>\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n          </ListItem>\n        </List>\n      </Dialog>\n    </div>\n  );\n}\n"},1562:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return v});var a=t(16),o=t(0),l=t.n(o),i=t(926),r=t(899),c=t(917),s=t(1021),m=t(1009),u=t(1203),p=t(1098),d=t(462),g=t(894),f=t(468),h=t(890),C=t(471),b=t(912),y=Object(i.a)(function(e){return{form:{display:"flex",flexDirection:"column",margin:"auto",width:"fit-content"},formControl:{marginTop:e.spacing(2),minWidth:120},formControlLabel:{marginTop:e.spacing(1)}}});function v(){var e=y(),n=l.a.useState(!1),t=Object(a.a)(n,2),o=t[0],i=t[1],v=l.a.useState(!0),E=Object(a.a)(v,2),D=E[0],T=E[1],x=l.a.useState("sm"),k=Object(a.a)(x,2),S=k[0],O=k[1];function B(){i(!1)}return l.a.createElement(l.a.Fragment,null,l.a.createElement(r.a,{variant:"outlined",color:"primary",onClick:function(){i(!0)}},"Open max-width dialog"),l.a.createElement(c.a,{fullWidth:D,maxWidth:S,open:o,onClose:B,"aria-labelledby":"max-width-dialog-title"},l.a.createElement(p.a,{id:"max-width-dialog-title"},"Optional sizes"),l.a.createElement(m.a,null,l.a.createElement(u.a,null,"You can set my maximum width and whether to adapt or not."),l.a.createElement("form",{className:e.form,noValidate:!0},l.a.createElement(d.a,{className:e.formControl},l.a.createElement(f.a,{htmlFor:"max-width"},"maxWidth"),l.a.createElement(C.a,{value:S,onChange:function(e){O(e.target.value)},inputProps:{name:"max-width",id:"max-width"}},l.a.createElement(h.a,{value:!1},"false"),l.a.createElement(h.a,{value:"xs"},"xs"),l.a.createElement(h.a,{value:"sm"},"sm"),l.a.createElement(h.a,{value:"md"},"md"),l.a.createElement(h.a,{value:"lg"},"lg"),l.a.createElement(h.a,{value:"xl"},"xl"))),l.a.createElement(g.a,{className:e.formControlLabel,control:l.a.createElement(b.a,{checked:D,onChange:function(e){T(e.target.checked)},value:"fullWidth"}),label:"Full width"}))),l.a.createElement(s.a,null,l.a.createElement(r.a,{onClick:B,color:"primary"},"Close"))))}},1563:function(e,n){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nexport default function MaxWidthDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleMaxWidthChange(event) {\n    setMaxWidth(event.target.value);\n  }\n\n  function handleFullWidthChange(event) {\n    setFullWidth(event.target.checked);\n  }\n\n  return (\n    <React.Fragment>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open max-width dialog\n      </Button>\n      <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            You can set my maximum width and whether to adapt or not.\n          </DialogContentText>\n          <form className={classes.form} noValidate>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\n              <Select\n                value={maxWidth}\n                onChange={handleMaxWidthChange}\n                inputProps={{\n                  name: 'max-width',\n                  id: 'max-width',\n                }}\n              >\n                <MenuItem value={false}>false</MenuItem>\n                <MenuItem value=\"xs\">xs</MenuItem>\n                <MenuItem value=\"sm\">sm</MenuItem>\n                <MenuItem value=\"md\">md</MenuItem>\n                <MenuItem value=\"lg\">lg</MenuItem>\n                <MenuItem value=\"xl\">xl</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControlLabel\n              className={classes.formControlLabel}\n              control={\n                <Switch checked={fullWidth} onChange={handleFullWidthChange} value=\"fullWidth\" />\n              }\n              label=\"Full width\"\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n"},1564:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return g});var a=t(16),o=t(0),l=t.n(o),i=t(899),r=t(917),c=t(1021),s=t(1009),m=t(1203),u=t(1098),p=t(851),d=t(108);function g(){var e=l.a.useState(!1),n=Object(a.a)(e,2),t=n[0],o=n[1],g=Object(d.a)(),f=Object(p.a)(g.breakpoints.down("sm"));function h(){o(!1)}return l.a.createElement("div",null,l.a.createElement(i.a,{variant:"outlined",color:"primary",onClick:function(){o(!0)}},"Open responsive dialog"),l.a.createElement(r.a,{fullScreen:f,open:t,onClose:h,"aria-labelledby":"responsive-dialog-title"},l.a.createElement(u.a,{id:"responsive-dialog-title"},"Use Google's location service?"),l.a.createElement(s.a,null,l.a.createElement(m.a,null,"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.")),l.a.createElement(c.a,null,l.a.createElement(i.a,{onClick:h,color:"primary"},"Disagree"),l.a.createElement(i.a,{onClick:h,color:"primary",autoFocus:!0},"Agree"))))}},1565:function(e,n){e.exports="import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nexport default function ResponsiveDialog() {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open responsive dialog\n      </Button>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"},1566:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return D});var a=t(16),o=t(135),l=t(0),i=t.n(l),r=t(926),c=t(899),s=t(848),m=t(849),u=t(893),p=t(1098),d=t(1009),g=t(1021),f=t(917),h=t(911),C=t(922),b=t(894),y=["None","Atria","Callisto","Dione","Ganymede","Hangouts Call","Luna","Oberon","Phobos","Pyxis","Sedna","Titania","Triton","Umbriel"];function v(e){var n=e.onClose,t=e.value,l=e.open,r=Object(o.a)(e,["onClose","value","open"]),s=i.a.useState(t),m=Object(a.a)(s,2),u=m[0],v=m[1],E=i.a.useRef(null);return i.a.useEffect(function(){l||v(t)},[t,l]),i.a.createElement(f.a,Object.assign({disableBackdropClick:!0,disableEscapeKeyDown:!0,maxWidth:"xs",onEntering:function(){null!=E.current&&E.current.focus()},"aria-labelledby":"confirmation-dialog-title",open:l},r),i.a.createElement(p.a,{id:"confirmation-dialog-title"},"Phone Ringtone"),i.a.createElement(d.a,{dividers:!0},i.a.createElement(h.a,{ref:E,"aria-label":"ringtone",name:"ringtone",value:u,onChange:function(e,n){v(n)}},y.map(function(e){return i.a.createElement(b.a,{value:e,key:e,control:i.a.createElement(C.a,null),label:e})}))),i.a.createElement(g.a,null,i.a.createElement(c.a,{onClick:function(){n()},color:"primary"},"Cancel"),i.a.createElement(c.a,{onClick:function(){n(u)},color:"primary"},"Ok")))}var E=Object(r.a)(function(e){return{root:{width:"100%",maxWidth:360,backgroundColor:e.palette.background.paper},paper:{width:"80%",maxHeight:435}}});function D(){var e=E(),n=i.a.useState(!1),t=Object(a.a)(n,2),o=t[0],l=t[1],r=i.a.useState("Dione"),c=Object(a.a)(r,2),p=c[0],d=c[1];return i.a.createElement("div",{className:e.root},i.a.createElement(s.a,{component:"div",role:"list"},i.a.createElement(m.a,{button:!0,divider:!0,disabled:!0,role:"listitem"},i.a.createElement(u.a,{primary:"Interruptions"})),i.a.createElement(m.a,{button:!0,divider:!0,"aria-haspopup":"true","aria-controls":"ringtone-menu","aria-label":"phone ringtone",onClick:function(){l(!0)},role:"listitem"},i.a.createElement(u.a,{primary:"Phone ringtone",secondary:p})),i.a.createElement(m.a,{button:!0,divider:!0,disabled:!0,role:"listitem"},i.a.createElement(u.a,{primary:"Default notification ringtone",secondary:"Tethys"})),i.a.createElement(v,{classes:{paper:e.paper},id:"ringtone-menu",keepMounted:!0,open:o,onClose:function(e){l(!1),e&&d(e)},value:p})))}},1567:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst options = [\n  'None',\n  'Atria',\n  'Callisto',\n  'Dione',\n  'Ganymede',\n  'Hangouts Call',\n  'Luna',\n  'Oberon',\n  'Phobos',\n  'Pyxis',\n  'Sedna',\n  'Titania',\n  'Triton',\n  'Umbriel',\n];\n\nfunction ConfirmationDialogRaw(props) {\n  const { onClose, value: valueProp, open, ...other } = props;\n  const [value, setValue] = React.useState(valueProp);\n  const radioGroupRef = React.useRef(null);\n\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  function handleEntering() {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  }\n\n  function handleCancel() {\n    onClose();\n  }\n\n  function handleOk() {\n    onClose(value);\n  }\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  return (\n    <Dialog\n      disableBackdropClick\n      disableEscapeKeyDown\n      maxWidth=\"xs\"\n      onEntering={handleEntering}\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={open}\n      {...other}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\n      <DialogContent dividers>\n        <RadioGroup\n          ref={radioGroupRef}\n          aria-label=\"ringtone\"\n          name=\"ringtone\"\n          value={value}\n          onChange={handleChange}\n        >\n          {options.map(option => (\n            <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\n          ))}\n        </RadioGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleOk} color=\"primary\">\n          Ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  paper: {\n    width: '80%',\n    maxHeight: 435,\n  },\n}));\n\nexport default function ConfirmationDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('Dione');\n\n  function handleClickListItem() {\n    setOpen(true);\n  }\n\n  function handleClose(newValue) {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <List component=\"div\" role=\"list\">\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText primary=\"Interruptions\" />\n        </ListItem>\n        <ListItem\n          button\n          divider\n          aria-haspopup=\"true\"\n          aria-controls=\"ringtone-menu\"\n          aria-label=\"phone ringtone\"\n          onClick={handleClickListItem}\n          role=\"listitem\"\n        >\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\n        </ListItem>\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n        </ListItem>\n        <ConfirmationDialogRaw\n          classes={{\n            paper: classes.paper,\n          }}\n          id=\"ringtone-menu\"\n          keepMounted\n          open={open}\n          onClose={handleClose}\n          value={value}\n        />\n      </List>\n    </div>\n  );\n}\n"},1568:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return d});var a=t(11),o=t(16),l=t(0),i=t.n(l),r=t(899),c=t(917),s=t(1021),m=t(1009),u=t(1203),p=t(1098);function d(){var e=i.a.useState(!1),n=Object(o.a)(e,2),t=n[0],l=n[1],d=i.a.useState("paper"),g=Object(o.a)(d,2),f=g[0],h=g[1],C=function(e){return function(){l(!0),h(e)}};function b(){l(!1)}return i.a.createElement("div",null,i.a.createElement(r.a,{onClick:C("paper")},"scroll=paper"),i.a.createElement(r.a,{onClick:C("body")},"scroll=body"),i.a.createElement(c.a,{open:t,onClose:b,scroll:f,"aria-labelledby":"scroll-dialog-title"},i.a.createElement(p.a,{id:"scroll-dialog-title"},"Subscribe"),i.a.createElement(m.a,{dividers:"paper"===f},i.a.createElement(u.a,null,Object(a.a)(new Array(50)).map(function(){return"Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et."}).join("\n"))),i.a.createElement(s.a,null,i.a.createElement(r.a,{onClick:b,color:"primary"},"Cancel"),i.a.createElement(r.a,{onClick:b,color:"primary"},"Subscribe"))))}},1569:function(e,n){e.exports="import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function ScrollDialog() {\n  const [open, setOpen] = React.useState(false);\n  const [scroll, setScroll] = React.useState('paper');\n\n  const handleClickOpen = scrollType => () => {\n    setOpen(true);\n    setScroll(scrollType);\n  };\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClickOpen('paper')}>scroll=paper</Button>\n      <Button onClick={handleClickOpen('body')}>scroll=body</Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\n        <DialogContent dividers={scroll === 'paper'}>\n          <DialogContentText>\n            {[...new Array(50)]\n              .map(\n                () => `Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\n              )\n              .join('\\n')}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"},1570:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return h});var a=t(16),o=t(0),l=t.n(o),i=t(899),r=t(917),c=t(1021),s=t(1009),m=t(1203),u=t(1098),p=t(153),d=t(1571),g=t.n(d);function f(e){return l.a.createElement(g.a,{cancel:'[class*="MuiDialogContent-root"]'},l.a.createElement(p.a,e))}function h(){var e=l.a.useState(!1),n=Object(a.a)(e,2),t=n[0],o=n[1],p=function(){o(!1)};return l.a.createElement("div",null,l.a.createElement(i.a,{variant:"outlined",color:"primary",onClick:function(){o(!0)}},"Open form dialog"),l.a.createElement(r.a,{open:t,onClose:p,PaperComponent:f,"aria-labelledby":"draggable-dialog-title"},l.a.createElement(u.a,{style:{cursor:"move"},id:"draggable-dialog-title"},"Subscribe"),l.a.createElement(s.a,null,l.a.createElement(m.a,null,"To subscribe to this website, please enter your email address here. We will send updates occasionally.")),l.a.createElement(c.a,null,l.a.createElement(i.a,{onClick:p,color:"primary"},"Cancel"),l.a.createElement(i.a,{onClick:p,color:"primary"},"Subscribe"))))}},1572:function(e,n){e.exports="import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport Draggable from 'react-draggable';\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function DraggableDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open form dialog\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"draggable-dialog-title\"\n      >\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n          Subscribe\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To subscribe to this website, please enter your email address here. We will send updates\n            occasionally.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"},2213:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t.n(a),l=t(20),i=t(889),r=t(131),c=t(899),s=t(470),m=Object(s.a)(function(e){return{layoutRoot:{"& .description":{marginBottom:16}}}});n.default=function(e){var n=m();return o.a.createElement(l.s,{classes:{root:n.layoutRoot},header:o.a.createElement("div",{className:"flex flex-1 items-center justify-between p-24"},o.a.createElement("div",{className:"flex flex-col"},o.a.createElement("div",{className:"flex items-center mb-16"},o.a.createElement(i.a,{className:"text-18",color:"action"},"home"),o.a.createElement(i.a,{className:"text-16",color:"action"},"chevron_right"),o.a.createElement(r.a,{color:"textSecondary"},"Documentation"),o.a.createElement(i.a,{className:"text-16",color:"action"},"chevron_right"),o.a.createElement(r.a,{color:"textSecondary"},"Material UI Components")),o.a.createElement(r.a,{variant:"h6"},"Dialogs")),o.a.createElement(c.a,{className:"normal-case",variant:"contained",component:"a",href:"https://material-ui.com/components/dialogs",target:"_blank",role:"button"},o.a.createElement(i.a,{className:"mr-4"},"link"),"Reference")),content:o.a.createElement("div",{className:"p-24 max-w-2xl"},o.a.createElement(r.a,{className:"text-44 mt-32 mb-8",component:"h1"},"Dialogs"),o.a.createElement(r.a,{className:"description"},"Dialogs inform users about a task and can contain critical information, require decisions, or involve multiple tasks."),o.a.createElement(r.a,{className:"mb-16",component:"div"},"A ",o.a.createElement("a",{href:"https://material.io/design/components/dialogs.html"},"Dialog")," is a type of ",o.a.createElement("a",{href:"/components/modal/"},"modal")," window that appears in front of app content to provide critical information or ask for a decision. Dialogs disable all app functionality when they appear, and remain on screen until confirmed, dismissed, or a required action has been taken."),o.a.createElement(r.a,{className:"mb-16",component:"div"},"Dialogs are purposefully interruptive, so they should be used sparingly."),o.a.createElement(r.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Simple Dialogs"),o.a.createElement(r.a,{className:"mb-16",component:"div"},"Simple dialogs can provide additional details or actions about a list item. For example, they can display avatars, icons, clarifying subtext, or orthogonal actions (such as adding an account)."),o.a.createElement(r.a,{className:"mb-16",component:"div"},"Touch mechanics:"),o.a.createElement("ul",null,o.a.createElement("li",null,"Choosing an option immediately commits the option and closes the menu"),o.a.createElement("li",null,"Touching outside of the dialog, or pressing Back, cancels the action and closes the dialog")),o.a.createElement(r.a,{className:"mb-16",component:"div"},o.a.createElement(l.j,{className:"my-24",iframe:!1,component:t(1549).default,raw:t(1551)})),o.a.createElement(r.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Alerts"),o.a.createElement(r.a,{className:"mb-16",component:"div"},"Alerts are urgent interruptions, requiring acknowledgement, that inform the user about a situation."),o.a.createElement(r.a,{className:"mb-16",component:"div"},"Most alerts don't need titles. They summarize a decision in a sentence or two by either:"),o.a.createElement("ul",null,o.a.createElement("li",null,'Asking a question (e.g. "Delete this conversation?")'),o.a.createElement("li",null,"Making a statement related to the action buttons")),o.a.createElement(r.a,{className:"mb-16",component:"div"},"Use title bar alerts only for high-risk situations, such as the potential loss of connectivity. Users should be able to understand the choices based on the title and button text alone."),o.a.createElement(r.a,{className:"mb-16",component:"div"},"If a title is required:"),o.a.createElement("ul",null,o.a.createElement("li",null,'Use a clear question or statement with an explanation in the content area, such as "Erase USB storage?".'),o.a.createElement("li",null,"Avoid apologies, ambiguity, or questions, such as \u201cWarning!\u201d or \u201cAre you sure?\u201d")),o.a.createElement(r.a,{className:"mb-16",component:"div"},o.a.createElement(l.j,{className:"my-24",iframe:!1,component:t(1552).default,raw:t(1553)})),o.a.createElement(r.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Transitions"),o.a.createElement(r.a,{className:"mb-16",component:"div"},"You can also swap out the transition, the next example uses ",o.a.createElement("code",null,"Slide"),"."),o.a.createElement(r.a,{className:"mb-16",component:"div"},o.a.createElement(l.j,{className:"my-24",iframe:!1,component:t(1554).default,raw:t(1555)})),o.a.createElement(r.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Form dialogs"),o.a.createElement(r.a,{className:"mb-16",component:"div"},"Form dialogs allow users to fill out form fields within a dialog. For example, if your site prompts for potential subscribers to fill in their email address, they can fill out the email field and touch 'Submit'."),o.a.createElement(r.a,{className:"mb-16",component:"div"},o.a.createElement(l.j,{className:"my-24",iframe:!1,component:t(1556).default,raw:t(1557)})),o.a.createElement(r.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Customized dialogs"),o.a.createElement(r.a,{className:"mb-16",component:"div"},"Here is an example of customizing the component. You can learn more about this in the",o.a.createElement("a",{href:"/customization/components/"},"overrides documentation page"),"."),o.a.createElement(r.a,{className:"mb-16",component:"div"},"The dialog has a close button added to aide usability."),o.a.createElement(r.a,{className:"mb-16",component:"div"},o.a.createElement(l.j,{className:"my-24",iframe:!1,component:t(1558).default,raw:t(1559)})),o.a.createElement(r.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Full-screen dialogs"),o.a.createElement(r.a,{className:"mb-16",component:"div"},o.a.createElement(l.j,{className:"my-24",iframe:!1,component:t(1560).default,raw:t(1561)})),o.a.createElement(r.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Optional sizes"),o.a.createElement(r.a,{className:"mb-16",component:"div"},"You can set a dialog maximum width by using the ",o.a.createElement("code",null,"maxWidth")," enumerable in combination with the ",o.a.createElement("code",null,"fullWidth")," boolean. When the ",o.a.createElement("code",null,"fullWidth")," property is true, the dialog will adapt based on the ",o.a.createElement("code",null,"maxWidth")," value."),o.a.createElement(r.a,{className:"mb-16",component:"div"},o.a.createElement(l.j,{className:"my-24",iframe:!1,component:t(1562).default,raw:t(1563)})),o.a.createElement(r.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Responsive full-screen"),o.a.createElement(r.a,{className:"mb-16",component:"div"},"You may make a dialog responsively full screen using ",o.a.createElement("a",{href:"/components/use-media-query/#usemediaquery"},o.a.createElement("code",null,"useMediaQuery")),"."),o.a.createElement(l.k,{component:"pre",className:"language-jsx"}," \nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nfunction MyComponent() {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return <Dialog fullScreen={fullScreen} />\n}\n"),o.a.createElement(r.a,{className:"mb-16",component:"div"},o.a.createElement(l.j,{className:"my-24",iframe:!1,component:t(1564).default,raw:t(1565)})),o.a.createElement(r.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Confirmation dialogs"),o.a.createElement(r.a,{className:"mb-16",component:"div"},"Confirmation dialogs require users to explicitly confirm their choice before an option is committed. For example, users can listen to multiple ringtones but only make a final selection upon touching \u201cOK\u201d."),o.a.createElement(r.a,{className:"mb-16",component:"div"},"Touching \u201cCancel\u201d in a confirmation dialog, or pressing Back, cancels the action, discards any changes, and closes the dialog."),o.a.createElement(r.a,{className:"mb-16",component:"div"},o.a.createElement(l.j,{className:"my-24",iframe:!1,component:t(1566).default,raw:t(1567)})),o.a.createElement(r.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Accessibility"),o.a.createElement(r.a,{className:"mb-16",component:"div"},"Follow the ",o.a.createElement("a",{href:"/components/modal/#accessibility"},"Modal accessibility section"),"."),o.a.createElement(r.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Scrolling long content"),o.a.createElement(r.a,{className:"mb-16",component:"div"},"When dialogs become too long for the user\u2019s viewport or device, they scroll."),o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement("code",null,"scroll=paper")," the content of the dialog scrolls within the paper element."),o.a.createElement("li",null,o.a.createElement("code",null,"scroll=body")," the content of the dialog scrolls within the body element.")),o.a.createElement(r.a,{className:"mb-16",component:"div"},"Try the demo below to see what we mean:"),o.a.createElement(r.a,{className:"mb-16",component:"div"},o.a.createElement(l.j,{className:"my-24",iframe:!1,component:t(1568).default,raw:t(1569)})),o.a.createElement(r.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Draggable dialog"),o.a.createElement(r.a,{className:"mb-16",component:"div"},"You can create a draggable dialog by using ",o.a.createElement("a",{href:"https://github.com/mzabriskie/react-draggable"},"react-draggable"),". To do so, you can pass the the imported ",o.a.createElement("code",null,"Draggable")," component as the ",o.a.createElement("code",null,"PaperComponent")," of the ",o.a.createElement("code",null,"Dialog")," component. This will make the entire dialog draggable."),o.a.createElement(r.a,{className:"mb-16",component:"div"},o.a.createElement(l.j,{className:"my-24",iframe:!1,component:t(1570).default,raw:t(1572)})),o.a.createElement(r.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Performance"),o.a.createElement(r.a,{className:"mb-16",component:"div"},"Follow the ",o.a.createElement("a",{href:"/components/modal/#performance"},"Modal performance section"),"."))})}}}]);