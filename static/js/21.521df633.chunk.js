(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{2006:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return f});var t=a(30),l=a(10),r=a(16),i=a(0),o=a.n(i),s=a(3),m=a(926),d=a(890),c=a(896),u=Object(m.a)(function(e){return{container:{display:"flex",flexWrap:"wrap"},textField:{marginLeft:e.spacing(1),marginRight:e.spacing(1),width:200},dense:{marginTop:19},menu:{width:200}}}),p=[{value:"USD",label:"$"},{value:"EUR",label:"\u20ac"},{value:"BTC",label:"\u0e3f"},{value:"JPY",label:"\xa5"}];function f(){var e=u(),n=o.a.useState({name:"Cat in the Hat",age:"",multiline:"Controlled",currency:"EUR"}),a=Object(r.a)(n,2),i=a[0],m=a[1],f=function(e){return function(n){m(Object(l.a)({},i,Object(t.a)({},e,n.target.value)))}};return o.a.createElement("form",{className:e.container,noValidate:!0,autoComplete:"off"},o.a.createElement(c.a,{id:"standard-name",label:"Name",className:e.textField,value:i.name,onChange:f("name"),margin:"normal"}),o.a.createElement(c.a,{id:"standard-uncontrolled",label:"Uncontrolled",defaultValue:"foo",className:e.textField,margin:"normal"}),o.a.createElement(c.a,{required:!0,id:"standard-required",label:"Required",defaultValue:"Hello World",className:e.textField,margin:"normal"}),o.a.createElement(c.a,{error:!0,id:"standard-error",label:"Error",defaultValue:"Hello World",className:e.textField,margin:"normal"}),o.a.createElement(c.a,{disabled:!0,id:"standard-disabled",label:"Disabled",defaultValue:"Hello World",className:e.textField,margin:"normal"}),o.a.createElement(c.a,{id:"standard-password-input",label:"Password",className:e.textField,type:"password",autoComplete:"current-password",margin:"normal"}),o.a.createElement(c.a,{id:"standard-read-only-input",label:"Read Only",defaultValue:"Hello World",className:e.textField,margin:"normal",InputProps:{readOnly:!0}}),o.a.createElement(c.a,{id:"standard-dense",label:"Dense",className:Object(s.a)(e.textField,e.dense),margin:"dense"}),o.a.createElement(c.a,{id:"standard-multiline-flexible",label:"Multiline",multiline:!0,rowsMax:"4",value:i.multiline,onChange:f("multiline"),className:e.textField,margin:"normal"}),o.a.createElement(c.a,{id:"standard-multiline-static",label:"Multiline",multiline:!0,rows:"4",defaultValue:"Default Value",className:e.textField,margin:"normal"}),o.a.createElement(c.a,{id:"standard-helperText",label:"Helper text",defaultValue:"Default Value",className:e.textField,helperText:"Some important text",margin:"normal"}),o.a.createElement(c.a,{id:"standard-with-placeholder",label:"With placeholder",placeholder:"Placeholder",className:e.textField,margin:"normal"}),o.a.createElement(c.a,{id:"standard-textarea",label:"With placeholder multiline",placeholder:"Placeholder",multiline:!0,className:e.textField,margin:"normal"}),o.a.createElement(c.a,{id:"standard-number",label:"Number",value:i.age,onChange:f("age"),type:"number",className:e.textField,InputLabelProps:{shrink:!0},margin:"normal"}),o.a.createElement(c.a,{id:"standard-search",label:"Search field",type:"search",className:e.textField,margin:"normal"}),o.a.createElement(c.a,{id:"standard-select-currency",select:!0,label:"Select",className:e.textField,value:i.currency,onChange:f("currency"),SelectProps:{MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal"},p.map(function(e){return o.a.createElement(d.a,{key:e.value,value:e.value},e.label)})),o.a.createElement(c.a,{id:"standard-select-currency-native",select:!0,label:"Native select",className:e.textField,value:i.currency,onChange:f("currency"),SelectProps:{native:!0,MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal"},p.map(function(e){return o.a.createElement("option",{key:e.value,value:e.value},e.label)})),o.a.createElement(c.a,{id:"standard-full-width",label:"Label",style:{margin:8},placeholder:"Placeholder",helperText:"Full width!",fullWidth:!0,margin:"normal",InputLabelProps:{shrink:!0}}),o.a.createElement(c.a,{id:"standard-bare",className:e.textField,defaultValue:"Bare",margin:"normal",inputProps:{"aria-label":"bare"}}))}},2007:function(e,n){e.exports='import React from \'react\';\nimport clsx from \'clsx\';\nimport { makeStyles } from \'@material-ui/core/styles\';\nimport MenuItem from \'@material-ui/core/MenuItem\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nconst currencies = [\n  {\n    value: \'USD\',\n    label: \'$\',\n  },\n  {\n    value: \'EUR\',\n    label: \'\u20ac\',\n  },\n  {\n    value: \'BTC\',\n    label: \'\u0e3f\',\n  },\n  {\n    value: \'JPY\',\n    label: \'\xa5\',\n  },\n];\n\nexport default function TextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: \'Cat in the Hat\',\n    age: \'\',\n    multiline: \'Controlled\',\n    currency: \'EUR\',\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete="off">\n      <TextField\n        id="standard-name"\n        label="Name"\n        className={classes.textField}\n        value={values.name}\n        onChange={handleChange(\'name\')}\n        margin="normal"\n      />\n      <TextField\n        id="standard-uncontrolled"\n        label="Uncontrolled"\n        defaultValue="foo"\n        className={classes.textField}\n        margin="normal"\n      />\n      <TextField\n        required\n        id="standard-required"\n        label="Required"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n      />\n      <TextField\n        error\n        id="standard-error"\n        label="Error"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n      />\n      <TextField\n        disabled\n        id="standard-disabled"\n        label="Disabled"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n      />\n      <TextField\n        id="standard-password-input"\n        label="Password"\n        className={classes.textField}\n        type="password"\n        autoComplete="current-password"\n        margin="normal"\n      />\n      <TextField\n        id="standard-read-only-input"\n        label="Read Only"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n        InputProps={{\n          readOnly: true,\n        }}\n      />\n      <TextField\n        id="standard-dense"\n        label="Dense"\n        className={clsx(classes.textField, classes.dense)}\n        margin="dense"\n      />\n      <TextField\n        id="standard-multiline-flexible"\n        label="Multiline"\n        multiline\n        rowsMax="4"\n        value={values.multiline}\n        onChange={handleChange(\'multiline\')}\n        className={classes.textField}\n        margin="normal"\n      />\n      <TextField\n        id="standard-multiline-static"\n        label="Multiline"\n        multiline\n        rows="4"\n        defaultValue="Default Value"\n        className={classes.textField}\n        margin="normal"\n      />\n      <TextField\n        id="standard-helperText"\n        label="Helper text"\n        defaultValue="Default Value"\n        className={classes.textField}\n        helperText="Some important text"\n        margin="normal"\n      />\n      <TextField\n        id="standard-with-placeholder"\n        label="With placeholder"\n        placeholder="Placeholder"\n        className={classes.textField}\n        margin="normal"\n      />\n      <TextField\n        id="standard-textarea"\n        label="With placeholder multiline"\n        placeholder="Placeholder"\n        multiline\n        className={classes.textField}\n        margin="normal"\n      />\n      <TextField\n        id="standard-number"\n        label="Number"\n        value={values.age}\n        onChange={handleChange(\'age\')}\n        type="number"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        margin="normal"\n      />\n      <TextField\n        id="standard-search"\n        label="Search field"\n        type="search"\n        className={classes.textField}\n        margin="normal"\n      />\n      <TextField\n        id="standard-select-currency"\n        select\n        label="Select"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange(\'currency\')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText="Please select your currency"\n        margin="normal"\n      >\n        {currencies.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id="standard-select-currency-native"\n        select\n        label="Native select"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange(\'currency\')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText="Please select your currency"\n        margin="normal"\n      >\n        {currencies.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id="standard-full-width"\n        label="Label"\n        style={{ margin: 8 }}\n        placeholder="Placeholder"\n        helperText="Full width!"\n        fullWidth\n        margin="normal"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id="standard-bare"\n        className={classes.textField}\n        defaultValue="Bare"\n        margin="normal"\n        inputProps={{ \'aria-label\': \'bare\' }}\n      />\n    </form>\n  );\n}\n'},2008:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return f});var t=a(30),l=a(10),r=a(16),i=a(0),o=a.n(i),s=a(3),m=a(926),d=a(890),c=a(896),u=[{value:"USD",label:"$"},{value:"EUR",label:"\u20ac"},{value:"BTC",label:"\u0e3f"},{value:"JPY",label:"\xa5"}],p=Object(m.a)(function(e){return{container:{display:"flex",flexWrap:"wrap"},textField:{marginLeft:e.spacing(1),marginRight:e.spacing(1)},dense:{marginTop:e.spacing(2)},menu:{width:200}}});function f(){var e=p(),n=o.a.useState({name:"Cat in the Hat",age:"",multiline:"Controlled",currency:"EUR"}),a=Object(r.a)(n,2),i=a[0],m=a[1],f=function(e){return function(n){m(Object(l.a)({},i,Object(t.a)({},e,n.target.value)))}};return o.a.createElement("form",{className:e.container,noValidate:!0,autoComplete:"off"},o.a.createElement(c.a,{id:"outlined-name",label:"Name",className:e.textField,value:i.name,onChange:f("name"),margin:"normal",variant:"outlined"}),o.a.createElement(c.a,{id:"outlined-uncontrolled",label:"Uncontrolled",defaultValue:"foo",className:e.textField,margin:"normal",variant:"outlined"}),o.a.createElement(c.a,{required:!0,id:"outlined-required",label:"Required",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"outlined"}),o.a.createElement(c.a,{error:!0,id:"outlined-error",label:"Error",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"outlined"}),o.a.createElement(c.a,{disabled:!0,id:"outlined-disabled",label:"Disabled",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"outlined"}),o.a.createElement(c.a,{id:"outlined-email-input",label:"Email",className:e.textField,type:"email",name:"email",autoComplete:"email",margin:"normal",variant:"outlined"}),o.a.createElement(c.a,{id:"outlined-password-input",label:"Password",className:e.textField,type:"password",autoComplete:"current-password",margin:"normal",variant:"outlined"}),o.a.createElement(c.a,{id:"outlined-read-only-input",label:"Read Only",defaultValue:"Hello World",className:e.textField,margin:"normal",InputProps:{readOnly:!0},variant:"outlined"}),o.a.createElement(c.a,{id:"outlined-dense",label:"Dense",className:Object(s.a)(e.textField,e.dense),margin:"dense",variant:"outlined"}),o.a.createElement(c.a,{id:"outlined-dense-multiline",label:"Dense multiline",className:Object(s.a)(e.textField,e.dense),margin:"dense",variant:"outlined",multiline:!0,rowsMax:"4"}),o.a.createElement(c.a,{id:"outlined-multiline-flexible",label:"Multiline",multiline:!0,rowsMax:"4",value:i.multiline,onChange:f("multiline"),className:e.textField,margin:"normal",helperText:"hello",variant:"outlined"}),o.a.createElement(c.a,{id:"outlined-multiline-static",label:"Multiline",multiline:!0,rows:"4",defaultValue:"Default Value",className:e.textField,margin:"normal",variant:"outlined"}),o.a.createElement(c.a,{id:"outlined-helperText",label:"Helper text",defaultValue:"Default Value",className:e.textField,helperText:"Some important text",margin:"normal",variant:"outlined"}),o.a.createElement(c.a,{id:"outlined-with-placeholder",label:"With placeholder",placeholder:"Placeholder",className:e.textField,margin:"normal",variant:"outlined"}),o.a.createElement(c.a,{id:"outlined-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0,className:e.textField,margin:"normal",variant:"outlined"}),o.a.createElement(c.a,{id:"outlined-number",label:"Number",value:i.age,onChange:f("age"),type:"number",className:e.textField,InputLabelProps:{shrink:!0},margin:"normal",variant:"outlined"}),o.a.createElement(c.a,{id:"outlined-search",label:"Search field",type:"search",className:e.textField,margin:"normal",variant:"outlined"}),o.a.createElement(c.a,{id:"outlined-select-currency",select:!0,label:"Select",className:e.textField,value:i.currency,onChange:f("currency"),SelectProps:{MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"outlined"},u.map(function(e){return o.a.createElement(d.a,{key:e.value,value:e.value},e.label)})),o.a.createElement(c.a,{id:"outlined-select-currency-native",select:!0,label:"Native select",className:e.textField,value:i.currency,onChange:f("currency"),SelectProps:{native:!0,MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"outlined"},u.map(function(e){return o.a.createElement("option",{key:e.value,value:e.value},e.label)})),o.a.createElement(c.a,{id:"outlined-full-width",label:"Label",style:{margin:8},placeholder:"Placeholder",helperText:"Full width!",fullWidth:!0,margin:"normal",variant:"outlined",InputLabelProps:{shrink:!0}}),o.a.createElement(c.a,{id:"outlined-bare",className:e.textField,defaultValue:"Bare",margin:"normal",variant:"outlined",inputProps:{"aria-label":"bare"}}))}},2009:function(e,n){e.exports='import React from \'react\';\nimport clsx from \'clsx\';\nimport { makeStyles } from \'@material-ui/core/styles\';\nimport MenuItem from \'@material-ui/core/MenuItem\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst currencies = [\n  {\n    value: \'USD\',\n    label: \'$\',\n  },\n  {\n    value: \'EUR\',\n    label: \'\u20ac\',\n  },\n  {\n    value: \'BTC\',\n    label: \'\u0e3f\',\n  },\n  {\n    value: \'JPY\',\n    label: \'\xa5\',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nexport default function OutlinedTextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: \'Cat in the Hat\',\n    age: \'\',\n    multiline: \'Controlled\',\n    currency: \'EUR\',\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete="off">\n      <TextField\n        id="outlined-name"\n        label="Name"\n        className={classes.textField}\n        value={values.name}\n        onChange={handleChange(\'name\')}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-uncontrolled"\n        label="Uncontrolled"\n        defaultValue="foo"\n        className={classes.textField}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        required\n        id="outlined-required"\n        label="Required"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        error\n        id="outlined-error"\n        label="Error"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        disabled\n        id="outlined-disabled"\n        label="Disabled"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-email-input"\n        label="Email"\n        className={classes.textField}\n        type="email"\n        name="email"\n        autoComplete="email"\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-password-input"\n        label="Password"\n        className={classes.textField}\n        type="password"\n        autoComplete="current-password"\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-read-only-input"\n        label="Read Only"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n        InputProps={{\n          readOnly: true,\n        }}\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-dense"\n        label="Dense"\n        className={clsx(classes.textField, classes.dense)}\n        margin="dense"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-dense-multiline"\n        label="Dense multiline"\n        className={clsx(classes.textField, classes.dense)}\n        margin="dense"\n        variant="outlined"\n        multiline\n        rowsMax="4"\n      />\n      <TextField\n        id="outlined-multiline-flexible"\n        label="Multiline"\n        multiline\n        rowsMax="4"\n        value={values.multiline}\n        onChange={handleChange(\'multiline\')}\n        className={classes.textField}\n        margin="normal"\n        helperText="hello"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-multiline-static"\n        label="Multiline"\n        multiline\n        rows="4"\n        defaultValue="Default Value"\n        className={classes.textField}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-helperText"\n        label="Helper text"\n        defaultValue="Default Value"\n        className={classes.textField}\n        helperText="Some important text"\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-with-placeholder"\n        label="With placeholder"\n        placeholder="Placeholder"\n        className={classes.textField}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-textarea"\n        label="Multiline Placeholder"\n        placeholder="Placeholder"\n        multiline\n        className={classes.textField}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-number"\n        label="Number"\n        value={values.age}\n        onChange={handleChange(\'age\')}\n        type="number"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-search"\n        label="Search field"\n        type="search"\n        className={classes.textField}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-select-currency"\n        select\n        label="Select"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange(\'currency\')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText="Please select your currency"\n        margin="normal"\n        variant="outlined"\n      >\n        {currencies.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id="outlined-select-currency-native"\n        select\n        label="Native select"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange(\'currency\')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText="Please select your currency"\n        margin="normal"\n        variant="outlined"\n      >\n        {currencies.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id="outlined-full-width"\n        label="Label"\n        style={{ margin: 8 }}\n        placeholder="Placeholder"\n        helperText="Full width!"\n        fullWidth\n        margin="normal"\n        variant="outlined"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id="outlined-bare"\n        className={classes.textField}\n        defaultValue="Bare"\n        margin="normal"\n        variant="outlined"\n        inputProps={{ \'aria-label\': \'bare\' }}\n      />\n    </form>\n  );\n}\n'},2010:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return f});var t=a(30),l=a(10),r=a(16),i=a(0),o=a.n(i),s=a(3),m=a(926),d=a(890),c=a(896),u=[{value:"USD",label:"$"},{value:"EUR",label:"\u20ac"},{value:"BTC",label:"\u0e3f"},{value:"JPY",label:"\xa5"}],p=Object(m.a)(function(e){return{container:{display:"flex",flexWrap:"wrap"},textField:{marginLeft:e.spacing(1),marginRight:e.spacing(1)},dense:{marginTop:16},menu:{width:200}}});function f(){var e=p(),n=o.a.useState({name:"Cat in the Hat",age:"",multiline:"Controlled",currency:"EUR"}),a=Object(r.a)(n,2),i=a[0],m=a[1],f=function(e){return function(n){m(Object(l.a)({},i,Object(t.a)({},e,n.target.value)))}};return o.a.createElement("form",{className:e.container,noValidate:!0,autoComplete:"off"},o.a.createElement(c.a,{id:"filled-name",label:"Name",className:e.textField,value:i.name,onChange:f("name"),margin:"normal",variant:"filled"}),o.a.createElement(c.a,{id:"filled-uncontrolled",label:"Uncontrolled",defaultValue:"foo",className:e.textField,margin:"normal",variant:"filled"}),o.a.createElement(c.a,{required:!0,id:"filled-required",label:"Required",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"filled"}),o.a.createElement(c.a,{error:!0,id:"filled-error",label:"Error",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"filled"}),o.a.createElement(c.a,{disabled:!0,id:"filled-disabled",label:"Disabled",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"filled"}),o.a.createElement(c.a,{id:"filled-email-input",label:"Email",className:e.textField,type:"email",name:"email",autoComplete:"email",margin:"normal",variant:"filled"}),o.a.createElement(c.a,{id:"filled-password-input",label:"Password",className:e.textField,type:"password",autoComplete:"current-password",margin:"normal",variant:"filled"}),o.a.createElement(c.a,{id:"filled-read-only-input",label:"Read Only",defaultValue:"Hello World",className:e.textField,margin:"normal",InputProps:{readOnly:!0},variant:"filled"}),o.a.createElement(c.a,{id:"filled-hidden-label",className:Object(s.a)(e.textField,e.dense),hiddenLabel:!0,variant:"filled",placeholder:"Hidden label",inputProps:{"aria-label":"hidden label"}}),o.a.createElement(c.a,{id:"filled-dense",label:"Dense",className:Object(s.a)(e.textField,e.dense),margin:"dense",variant:"filled"}),o.a.createElement(c.a,{id:"filled-dense-hidden-label",className:Object(s.a)(e.textField,e.dense),margin:"dense",hiddenLabel:!0,variant:"filled",placeholder:"Dense hidden label",inputProps:{"aria-label":"dense hidden label"}}),o.a.createElement(c.a,{id:"filled-dense-multiline",label:"Dense multiline",className:Object(s.a)(e.textField,e.dense),margin:"dense",variant:"filled",multiline:!0,rowsMax:"4"}),o.a.createElement(c.a,{id:"filled-multiline-flexible",label:"Multiline",multiline:!0,rowsMax:"4",value:i.multiline,onChange:f("multiline"),className:e.textField,margin:"normal",helperText:"hello",variant:"filled"}),o.a.createElement(c.a,{id:"filled-multiline-static",label:"Multiline",multiline:!0,rows:"4",defaultValue:"Default Value",className:e.textField,margin:"normal",variant:"filled"}),o.a.createElement(c.a,{id:"filled-helperText",label:"Helper text",defaultValue:"Default Value",className:e.textField,helperText:"Some important text",margin:"normal",variant:"filled"}),o.a.createElement(c.a,{id:"filled-with-placeholder",label:"With placeholder",placeholder:"Placeholder",className:e.textField,margin:"normal",variant:"filled"}),o.a.createElement(c.a,{id:"filled-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0,className:e.textField,margin:"normal",variant:"filled"}),o.a.createElement(c.a,{id:"filled-number",label:"Number",value:i.age,onChange:f("age"),type:"number",className:e.textField,InputLabelProps:{shrink:!0},margin:"normal",variant:"filled"}),o.a.createElement(c.a,{id:"filled-search",label:"Search field",type:"search",className:e.textField,margin:"normal",variant:"filled"}),o.a.createElement(c.a,{id:"filled-select-currency",select:!0,label:"Select",className:e.textField,value:i.currency,onChange:f("currency"),SelectProps:{MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"filled"},u.map(function(e){return o.a.createElement(d.a,{key:e.value,value:e.value},e.label)})),o.a.createElement(c.a,{id:"filled-select-currency-native",select:!0,label:"Native select",className:e.textField,value:i.currency,onChange:f("currency"),SelectProps:{native:!0,MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"filled"},u.map(function(e){return o.a.createElement("option",{key:e.value,value:e.value},e.label)})),o.a.createElement(c.a,{id:"filled-full-width",label:"Label",style:{margin:8},placeholder:"Placeholder",helperText:"Full width!",fullWidth:!0,margin:"normal",variant:"filled",InputLabelProps:{shrink:!0}}),o.a.createElement(c.a,{id:"filled-bare",className:e.textField,defaultValue:"Bare",margin:"normal",variant:"filled",inputProps:{"aria-label":"bare"}}))}},2011:function(e,n){e.exports='import React from \'react\';\nimport clsx from \'clsx\';\nimport { makeStyles } from \'@material-ui/core/styles\';\nimport MenuItem from \'@material-ui/core/MenuItem\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst currencies = [\n  {\n    value: \'USD\',\n    label: \'$\',\n  },\n  {\n    value: \'EUR\',\n    label: \'\u20ac\',\n  },\n  {\n    value: \'BTC\',\n    label: \'\u0e3f\',\n  },\n  {\n    value: \'JPY\',\n    label: \'\xa5\',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: 16,\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nexport default function FilledTextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: \'Cat in the Hat\',\n    age: \'\',\n    multiline: \'Controlled\',\n    currency: \'EUR\',\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete="off">\n      <TextField\n        id="filled-name"\n        label="Name"\n        className={classes.textField}\n        value={values.name}\n        onChange={handleChange(\'name\')}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-uncontrolled"\n        label="Uncontrolled"\n        defaultValue="foo"\n        className={classes.textField}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        required\n        id="filled-required"\n        label="Required"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        error\n        id="filled-error"\n        label="Error"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        disabled\n        id="filled-disabled"\n        label="Disabled"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-email-input"\n        label="Email"\n        className={classes.textField}\n        type="email"\n        name="email"\n        autoComplete="email"\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-password-input"\n        label="Password"\n        className={classes.textField}\n        type="password"\n        autoComplete="current-password"\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-read-only-input"\n        label="Read Only"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n        InputProps={{\n          readOnly: true,\n        }}\n        variant="filled"\n      />\n      <TextField\n        id="filled-hidden-label"\n        className={clsx(classes.textField, classes.dense)}\n        hiddenLabel\n        variant="filled"\n        placeholder="Hidden label"\n        inputProps={{ \'aria-label\': \'hidden label\' }}\n      />\n      <TextField\n        id="filled-dense"\n        label="Dense"\n        className={clsx(classes.textField, classes.dense)}\n        margin="dense"\n        variant="filled"\n      />\n      <TextField\n        id="filled-dense-hidden-label"\n        className={clsx(classes.textField, classes.dense)}\n        margin="dense"\n        hiddenLabel\n        variant="filled"\n        placeholder="Dense hidden label"\n        inputProps={{ \'aria-label\': \'dense hidden label\' }}\n      />\n      <TextField\n        id="filled-dense-multiline"\n        label="Dense multiline"\n        className={clsx(classes.textField, classes.dense)}\n        margin="dense"\n        variant="filled"\n        multiline\n        rowsMax="4"\n      />\n      <TextField\n        id="filled-multiline-flexible"\n        label="Multiline"\n        multiline\n        rowsMax="4"\n        value={values.multiline}\n        onChange={handleChange(\'multiline\')}\n        className={classes.textField}\n        margin="normal"\n        helperText="hello"\n        variant="filled"\n      />\n      <TextField\n        id="filled-multiline-static"\n        label="Multiline"\n        multiline\n        rows="4"\n        defaultValue="Default Value"\n        className={classes.textField}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-helperText"\n        label="Helper text"\n        defaultValue="Default Value"\n        className={classes.textField}\n        helperText="Some important text"\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-with-placeholder"\n        label="With placeholder"\n        placeholder="Placeholder"\n        className={classes.textField}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-textarea"\n        label="Multiline Placeholder"\n        placeholder="Placeholder"\n        multiline\n        className={classes.textField}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-number"\n        label="Number"\n        value={values.age}\n        onChange={handleChange(\'age\')}\n        type="number"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-search"\n        label="Search field"\n        type="search"\n        className={classes.textField}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-select-currency"\n        select\n        label="Select"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange(\'currency\')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText="Please select your currency"\n        margin="normal"\n        variant="filled"\n      >\n        {currencies.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id="filled-select-currency-native"\n        select\n        label="Native select"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange(\'currency\')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText="Please select your currency"\n        margin="normal"\n        variant="filled"\n      >\n        {currencies.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id="filled-full-width"\n        label="Label"\n        style={{ margin: 8 }}\n        placeholder="Placeholder"\n        helperText="Full width!"\n        fullWidth\n        margin="normal"\n        variant="filled"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id="filled-bare"\n        className={classes.textField}\n        defaultValue="Bare"\n        margin="normal"\n        variant="filled"\n        inputProps={{ \'aria-label\': \'bare\' }}\n      />\n    </form>\n  );\n}\n'},2012:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return f});var t=a(16),l=a(0),r=a.n(l),i=a(926),o=a(855),s=a(462),m=a(850),d=a(320),c=a(468),u=a(857),p=Object(i.a)(function(e){return{container:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing(1)}}});function f(){var e=r.a.useState(0),n=Object(t.a)(e,2),a=n[0],l=n[1],i=r.a.useState("Composed TextField"),f=Object(t.a)(i,2),h=f[0],b=f[1],g=r.a.useRef(null),x=p();function v(e){b(e.target.value)}return r.a.useEffect(function(){l(g.current.offsetWidth)},[]),r.a.createElement("div",{className:x.container},r.a.createElement(s.a,{className:x.formControl},r.a.createElement(c.a,{htmlFor:"component-simple"},"Name"),r.a.createElement(d.a,{id:"component-simple",value:h,onChange:v})),r.a.createElement(s.a,{className:x.formControl},r.a.createElement(c.a,{htmlFor:"component-helper"},"Name"),r.a.createElement(d.a,{id:"component-helper",value:h,onChange:v,"aria-describedby":"component-helper-text"}),r.a.createElement(m.a,{id:"component-helper-text"},"Some important helper text")),r.a.createElement(s.a,{className:x.formControl,disabled:!0},r.a.createElement(c.a,{htmlFor:"component-disabled"},"Name"),r.a.createElement(d.a,{id:"component-disabled",value:h,onChange:v}),r.a.createElement(m.a,null,"Disabled")),r.a.createElement(s.a,{className:x.formControl,error:!0},r.a.createElement(c.a,{htmlFor:"component-error"},"Name"),r.a.createElement(d.a,{id:"component-error",value:h,onChange:v,"aria-describedby":"component-error-text"}),r.a.createElement(m.a,{id:"component-error-text"},"Error")),r.a.createElement(s.a,{className:x.formControl,variant:"outlined"},r.a.createElement(c.a,{ref:g,htmlFor:"component-outlined"},"Name"),r.a.createElement(u.a,{id:"component-outlined",value:h,onChange:v,labelWidth:a})),r.a.createElement(s.a,{className:x.formControl,variant:"filled"},r.a.createElement(c.a,{htmlFor:"component-filled"},"Name"),r.a.createElement(o.a,{id:"component-filled",value:h,onChange:v})))}},2013:function(e,n){e.exports='import React from \'react\';\nimport { makeStyles } from \'@material-ui/core/styles\';\nimport FilledInput from \'@material-ui/core/FilledInput\';\nimport FormControl from \'@material-ui/core/FormControl\';\nimport FormHelperText from \'@material-ui/core/FormHelperText\';\nimport Input from \'@material-ui/core/Input\';\nimport InputLabel from \'@material-ui/core/InputLabel\';\nimport OutlinedInput from \'@material-ui/core/OutlinedInput\';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function ComposedTextField() {\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  const [name, setName] = React.useState(\'Composed TextField\');\n  const labelRef = React.useRef(null);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    setLabelWidth(labelRef.current.offsetWidth);\n  }, []);\n\n  function handleChange(event) {\n    setName(event.target.value);\n  }\n\n  return (\n    <div className={classes.container}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor="component-simple">Name</InputLabel>\n        <Input id="component-simple" value={name} onChange={handleChange} />\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor="component-helper">Name</InputLabel>\n        <Input\n          id="component-helper"\n          value={name}\n          onChange={handleChange}\n          aria-describedby="component-helper-text"\n        />\n        <FormHelperText id="component-helper-text">Some important helper text</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} disabled>\n        <InputLabel htmlFor="component-disabled">Name</InputLabel>\n        <Input id="component-disabled" value={name} onChange={handleChange} />\n        <FormHelperText>Disabled</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} error>\n        <InputLabel htmlFor="component-error">Name</InputLabel>\n        <Input\n          id="component-error"\n          value={name}\n          onChange={handleChange}\n          aria-describedby="component-error-text"\n        />\n        <FormHelperText id="component-error-text">Error</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} variant="outlined">\n        <InputLabel ref={labelRef} htmlFor="component-outlined">\n          Name\n        </InputLabel>\n        <OutlinedInput\n          id="component-outlined"\n          value={name}\n          onChange={handleChange}\n          labelWidth={labelWidth}\n        />\n      </FormControl>\n      <FormControl className={classes.formControl} variant="filled">\n        <InputLabel htmlFor="component-filled">Name</InputLabel>\n        <FilledInput id="component-filled" value={name} onChange={handleChange} />\n      </FormControl>\n    </div>\n  );\n}\n'},2014:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return s});var t=a(0),l=a.n(t),r=a(926),i=a(320),o=Object(r.a)(function(e){return{container:{display:"flex",flexWrap:"wrap"},input:{margin:e.spacing(1)}}});function s(){var e=o();return l.a.createElement("div",{className:e.container},l.a.createElement(i.a,{defaultValue:"Hello world",className:e.input,inputProps:{"aria-label":"description"}}),l.a.createElement(i.a,{placeholder:"Placeholder",className:e.input,inputProps:{"aria-label":"description"}}),l.a.createElement(i.a,{value:"Disabled",className:e.input,disabled:!0,inputProps:{"aria-label":"description"}}),l.a.createElement(i.a,{defaultValue:"Error",className:e.input,error:!0,inputProps:{"aria-label":"description"}}))}},2015:function(e,n){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  input: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function Inputs() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <Input\n        defaultValue=\"Hello world\"\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'description',\n        }}\n      />\n      <Input\n        placeholder=\"Placeholder\"\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'description',\n        }}\n      />\n      <Input\n        value=\"Disabled\"\n        className={classes.input}\n        disabled\n        inputProps={{\n          'aria-label': 'description',\n        }}\n      />\n      <Input\n        defaultValue=\"Error\"\n        className={classes.input}\n        error\n        inputProps={{\n          'aria-label': 'description',\n        }}\n      />\n    </div>\n  );\n}\n"},2016:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return E});var t=a(0),l=a.n(t),r=a(9),i=a(15),o=a(926),s=a(168),m=a(891),d=a(445),c=a(468),u=a(896),p=a(462),f=a(352),h=Object(r.a)({root:{"& label.Mui-focused":{color:"green"},"& .MuiInput-underline:after":{borderBottomColor:"green"},"& .MuiOutlinedInput-root":{"& fieldset":{borderColor:"red"},"&:hover fieldset":{borderColor:"yellow"},"&.Mui-focused fieldset":{borderColor:"green"}}}})(u.a),b=Object(r.a)(function(e){return{root:{"label + &":{marginTop:e.spacing(3)}},input:{borderRadius:4,position:"relative",backgroundColor:e.palette.common.white,border:"1px solid #ced4da",fontSize:16,width:"auto",padding:"10px 12px",transition:e.transitions.create(["border-color","box-shadow"]),fontFamily:["-apple-system","BlinkMacSystemFont",'"Segoe UI"',"Roboto",'"Helvetica Neue"',"Arial","sans-serif",'"Apple Color Emoji"','"Segoe UI Emoji"','"Segoe UI Symbol"'].join(","),"&:focus":{boxShadow:"".concat(Object(i.d)(e.palette.primary.main,.25)," 0 0 0 0.2rem"),borderColor:e.palette.primary.main}}}})(d.a),g=Object(o.a)(function(e){return{root:{border:"1px solid #e2e2e1",overflow:"hidden",borderRadius:4,backgroundColor:"#fcfcfb",transition:e.transitions.create(["border-color","box-shadow"]),"&:hover":{backgroundColor:"#fff"},"&$focused":{backgroundColor:"#fff",boxShadow:"".concat(Object(i.d)(e.palette.primary.main,.25)," 0 0 0 2px"),borderColor:e.palette.primary.main}},focused:{}}});function x(e){var n=g();return l.a.createElement(u.a,Object.assign({InputProps:{classes:n,disableUnderline:!0}},e))}var v=Object(o.a)(function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing(1)}}}),F=Object(s.a)({palette:{primary:f.a}});function E(){var e=v();return l.a.createElement("div",{className:e.root},l.a.createElement(h,{className:e.margin,id:"custom-css-standard-input",label:"Custom CSS"}),l.a.createElement(h,{className:e.margin,label:"Custom CSS",variant:"outlined",id:"custom-css-outlined-input"}),l.a.createElement(m.a,{theme:F},l.a.createElement(u.a,{className:e.margin,label:"ThemeProvider",id:"mui-theme-provider-standard-input"}),l.a.createElement(u.a,{className:e.margin,label:"ThemeProvider",variant:"outlined",id:"mui-theme-provider-outlined-input"})),l.a.createElement(p.a,{className:e.margin},l.a.createElement(c.a,{shrink:!0,htmlFor:"bootstrap-input"},"Bootstrap"),l.a.createElement(b,{defaultValue:"react-bootstrap",id:"bootstrap-input"})),l.a.createElement(x,{label:"Reddit",className:e.margin,defaultValue:"react-reddit",variant:"filled",id:"reddit-input"}),l.a.createElement(d.a,{className:e.margin,defaultValue:"Naked input",inputProps:{"aria-label":"naked"}}))}},2017:function(e,n){e.exports="import React from 'react';\nimport { fade, withStyles, makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { green } from '@material-ui/core/colors';\n\nconst CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'green',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'green',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'red',\n      },\n      '&:hover fieldset': {\n        borderColor: 'yellow',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'green',\n      },\n    },\n  },\n})(TextField);\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nconst useStylesReddit = makeStyles(theme => ({\n  root: {\n    border: '1px solid #e2e2e1',\n    overflow: 'hidden',\n    borderRadius: 4,\n    backgroundColor: '#fcfcfb',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    '&:hover': {\n      backgroundColor: '#fff',\n    },\n    '&$focused': {\n      backgroundColor: '#fff',\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n  focused: {},\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n  },\n});\n\nexport default function CustomizedInputs() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssTextField className={classes.margin} id=\"custom-css-standard-input\" label=\"Custom CSS\" />\n      <CssTextField\n        className={classes.margin}\n        label=\"Custom CSS\"\n        variant=\"outlined\"\n        id=\"custom-css-outlined-input\"\n      />\n      <ThemeProvider theme={theme}>\n        <TextField\n          className={classes.margin}\n          label=\"ThemeProvider\"\n          id=\"mui-theme-provider-standard-input\"\n        />\n        <TextField\n          className={classes.margin}\n          label=\"ThemeProvider\"\n          variant=\"outlined\"\n          id=\"mui-theme-provider-outlined-input\"\n        />\n      </ThemeProvider>\n      <FormControl className={classes.margin}>\n        <InputLabel shrink htmlFor=\"bootstrap-input\">\n          Bootstrap\n        </InputLabel>\n        <BootstrapInput defaultValue=\"react-bootstrap\" id=\"bootstrap-input\" />\n      </FormControl>\n      <RedditTextField\n        label=\"Reddit\"\n        className={classes.margin}\n        defaultValue=\"react-reddit\"\n        variant=\"filled\"\n        id=\"reddit-input\"\n      />\n      <InputBase\n        className={classes.margin}\n        defaultValue=\"Naked input\"\n        inputProps={{ 'aria-label': 'naked' }}\n      />\n    </div>\n  );\n}\n"},2018:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return g});var t=a(0),l=a.n(t),r=a(926),i=a(153),o=a(445),s=a(910),m=a(465),d=a(972),c=a.n(d),u=a(1102),p=a.n(u),f=a(2019),h=a.n(f),b=Object(r.a)({root:{padding:"2px 4px",display:"flex",alignItems:"center",width:400},input:{marginLeft:8,flex:1},iconButton:{padding:10},divider:{width:1,height:28,margin:4}});function g(){var e=b();return l.a.createElement(i.a,{className:e.root},l.a.createElement(m.a,{className:e.iconButton,"aria-label":"menu"},l.a.createElement(c.a,null)),l.a.createElement(o.a,{className:e.input,placeholder:"Search Google Maps",inputProps:{"aria-label":"search google maps"}}),l.a.createElement(m.a,{className:e.iconButton,"aria-label":"search"},l.a.createElement(p.a,null)),l.a.createElement(s.a,{className:e.divider}),l.a.createElement(m.a,{color:"primary",className:e.iconButton,"aria-label":"directions"},l.a.createElement(h.a,null)))}},2020:function(e,n){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n});\n\nexport default function CustomizedInputBase() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <IconButton className={classes.iconButton} aria-label=\"menu\">\n        <MenuIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Search Google Maps\"\n        inputProps={{ 'aria-label': 'search google maps' }}\n      />\n      <IconButton className={classes.iconButton} aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"directions\">\n        <DirectionsIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n"},2021:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return w});var t=a(30),l=a(10),r=a(16),i=a(0),o=a.n(i),s=a(3),m=a(926),d=a(465),c=a(320),u=a(468),p=a(888),f=a(850),h=a(462),b=a(896),g=a(890),x=a(1234),v=a.n(x),F=a(1235),E=a.n(F),N=[{value:"0-20",label:"0 to 20"},{value:"21-50",label:"21 to 50"},{value:"51-100",label:"51 to 100"}],y=Object(m.a)(function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing(1)},withoutLabel:{marginTop:e.spacing(3)},textField:{flexBasis:200}}});function w(){var e=y(),n=o.a.useState({amount:"",password:"",weight:"",weightRange:"",showPassword:!1}),a=Object(r.a)(n,2),i=a[0],m=a[1],x=function(e){return function(n){m(Object(l.a)({},i,Object(t.a)({},e,n.target.value)))}};return o.a.createElement("div",{className:e.root},o.a.createElement(b.a,{label:"With normal TextField",id:"simple-start-adornment",className:Object(s.a)(e.margin,e.textField),InputProps:{startAdornment:o.a.createElement(p.a,{position:"start"},"Kg")}}),o.a.createElement(b.a,{select:!0,label:"With Select",className:Object(s.a)(e.margin,e.textField),value:i.weightRange,onChange:x("weightRange"),InputProps:{startAdornment:o.a.createElement(p.a,{position:"start"},"Kg")}},N.map(function(e){return o.a.createElement(g.a,{key:e.value,value:e.value},e.label)})),o.a.createElement(h.a,{fullWidth:!0,className:e.margin},o.a.createElement(u.a,{htmlFor:"adornment-amount"},"Amount"),o.a.createElement(c.a,{id:"adornment-amount",value:i.amount,onChange:x("amount"),startAdornment:o.a.createElement(p.a,{position:"start"},"$")})),o.a.createElement(h.a,{className:Object(s.a)(e.margin,e.withoutLabel,e.textField)},o.a.createElement(c.a,{id:"adornment-weight",value:i.weight,onChange:x("weight"),endAdornment:o.a.createElement(p.a,{position:"end"},"Kg"),"aria-describedby":"weight-helper-text",inputProps:{"aria-label":"weight"}}),o.a.createElement(f.a,{id:"weight-helper-text"},"Weight")),o.a.createElement(h.a,{className:Object(s.a)(e.margin,e.textField)},o.a.createElement(u.a,{htmlFor:"adornment-password"},"Password"),o.a.createElement(c.a,{id:"adornment-password",type:i.showPassword?"text":"password",value:i.password,onChange:x("password"),endAdornment:o.a.createElement(p.a,{position:"end"},o.a.createElement(d.a,{"aria-label":"toggle password visibility",onClick:function(){m(Object(l.a)({},i,{showPassword:!i.showPassword}))},onMouseDown:function(e){e.preventDefault()}},i.showPassword?o.a.createElement(v.a,null):o.a.createElement(E.a,null)))})))}},2022:function(e,n){e.exports="import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    flexBasis: 200,\n  },\n}));\n\nexport default function InputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        label=\"With normal TextField\"\n        id=\"simple-start-adornment\"\n        className={clsx(classes.margin, classes.textField)}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        select\n        label=\"With Select\"\n        className={clsx(classes.margin, classes.textField)}\n        value={values.weightRange}\n        onChange={handleChange('weightRange')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      >\n        {ranges.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <FormControl fullWidth className={classes.margin}>\n        <InputLabel htmlFor=\"adornment-amount\">Amount</InputLabel>\n        <Input\n          id=\"adornment-amount\"\n          value={values.amount}\n          onChange={handleChange('amount')}\n          startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n        />\n      </FormControl>\n      <FormControl className={clsx(classes.margin, classes.withoutLabel, classes.textField)}>\n        <Input\n          id=\"adornment-weight\"\n          value={values.weight}\n          onChange={handleChange('weight')}\n          endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\n          aria-describedby=\"weight-helper-text\"\n          inputProps={{\n            'aria-label': 'weight',\n          }}\n        />\n        <FormHelperText id=\"weight-helper-text\">Weight</FormHelperText>\n      </FormControl>\n      <FormControl className={clsx(classes.margin, classes.textField)}>\n        <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\n        <Input\n          id=\"adornment-password\"\n          type={values.showPassword ? 'text' : 'password'}\n          value={values.password}\n          onChange={handleChange('password')}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n              >\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n    </div>\n  );\n}\n"},2023:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return h});var t=a(0),l=a.n(t),r=a(926),i=a(320),o=a(468),s=a(888),m=a(462),d=a(896),c=a(997),u=a(1143),p=a.n(u),f=Object(r.a)(function(e){return{margin:{margin:e.spacing(1)}}});function h(){var e=f();return l.a.createElement("div",null,l.a.createElement(m.a,{className:e.margin},l.a.createElement(o.a,{htmlFor:"input-with-icon-adornment"},"With a start adornment"),l.a.createElement(i.a,{id:"input-with-icon-adornment",startAdornment:l.a.createElement(s.a,{position:"start"},l.a.createElement(p.a,null))})),l.a.createElement(d.a,{className:e.margin,id:"input-with-icon-textfield",label:"TextField",InputProps:{startAdornment:l.a.createElement(s.a,{position:"start"},l.a.createElement(p.a,null))}}),l.a.createElement("div",{className:e.margin},l.a.createElement(c.a,{container:!0,spacing:1,alignItems:"flex-end"},l.a.createElement(c.a,{item:!0},l.a.createElement(p.a,null)),l.a.createElement(c.a,{item:!0},l.a.createElement(d.a,{id:"input-with-icon-grid",label:"With a grid"})))))}},2024:function(e,n){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function InputWithIcon() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor=\"input-with-icon-adornment\">With a start adornment</InputLabel>\n        <Input\n          id=\"input-with-icon-adornment\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <TextField\n        className={classes.margin}\n        id=\"input-with-icon-textfield\"\n        label=\"TextField\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <div className={classes.margin}>\n        <Grid container spacing={1} alignItems=\"flex-end\">\n          <Grid item>\n            <AccountCircle />\n          </Grid>\n          <Grid item>\n            <TextField id=\"input-with-icon-grid\" label=\"With a grid\" />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n"},2025:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return F});var t=a(30),l=a(10),r=a(16),i=a(0),o=a.n(i),s=a(3),m=a(926),d=a(465),c=a(888),u=a(896),p=a(890),f=a(1234),h=a.n(f),b=a(1235),g=a.n(b),x=[{value:"0-20",label:"0 to 20"},{value:"21-50",label:"21 to 50"},{value:"51-100",label:"51 to 100"}],v=Object(m.a)(function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing(1)},textField:{flexBasis:200}}});function F(){var e=v(),n=o.a.useState({amount:"",password:"",weight:"",weightRange:"",showPassword:!1}),a=Object(r.a)(n,2),i=a[0],m=a[1],f=function(e){return function(n){m(Object(l.a)({},i,Object(t.a)({},e,n.target.value)))}};return o.a.createElement("div",{className:e.root},o.a.createElement(u.a,{id:"filled-simple-start-adornment",className:Object(s.a)(e.margin,e.textField),variant:"filled",label:"With filled TextField",InputProps:{startAdornment:o.a.createElement(c.a,{position:"start"},"Kg")}}),o.a.createElement(u.a,{select:!0,className:Object(s.a)(e.margin,e.textField),variant:"filled",label:"With Select",value:i.weightRange,onChange:f("weightRange"),InputProps:{startAdornment:o.a.createElement(c.a,{position:"start"},"Kg")}},x.map(function(e){return o.a.createElement(p.a,{key:e.value,value:e.value},e.label)})),o.a.createElement(u.a,{id:"filled-adornment-amount",className:Object(s.a)(e.margin,e.textField),variant:"filled",label:"Amount",value:i.amount,onChange:f("amount"),InputProps:{startAdornment:o.a.createElement(c.a,{position:"start"},"$")}}),o.a.createElement(u.a,{id:"filled-adornment-weight",className:Object(s.a)(e.margin,e.textField),variant:"filled",label:"Weight",value:i.weight,onChange:f("weight"),helperText:"Weight",InputProps:{endAdornment:o.a.createElement(c.a,{position:"end"},"Kg")}}),o.a.createElement(u.a,{id:"filled-adornment-password",className:Object(s.a)(e.margin,e.textField),variant:"filled",type:i.showPassword?"text":"password",label:"Password",value:i.password,onChange:f("password"),InputProps:{endAdornment:o.a.createElement(c.a,{position:"end"},o.a.createElement(d.a,{edge:"end","aria-label":"toggle password visibility",onClick:function(){m(Object(l.a)({},i,{showPassword:!i.showPassword}))},onMouseDown:function(e){e.preventDefault()}},i.showPassword?o.a.createElement(g.a,null):o.a.createElement(h.a,null)))}}),o.a.createElement(u.a,{id:"filled-adornment-dense",className:Object(s.a)(e.margin,e.textField),variant:"filled",margin:"dense",label:"Amount in Euro",InputProps:{startAdornment:o.a.createElement(c.a,{position:"start"},"\u20ac")}}),o.a.createElement(u.a,{id:"filled-adornment-extra-dense",className:Object(s.a)(e.margin,e.textField),variant:"filled",margin:"dense",hiddenLabel:!0,InputProps:{inputProps:{"aria-label":"amount in Euro"},startAdornment:o.a.createElement(c.a,{position:"start"},"\u20ac")}}))}},2026:function(e,n){e.exports='import React from \'react\';\nimport clsx from \'clsx\';\nimport { makeStyles } from \'@material-ui/core/styles\';\nimport IconButton from \'@material-ui/core/IconButton\';\nimport InputAdornment from \'@material-ui/core/InputAdornment\';\nimport TextField from \'@material-ui/core/TextField\';\nimport MenuItem from \'@material-ui/core/MenuItem\';\nimport Visibility from \'@material-ui/icons/Visibility\';\nimport VisibilityOff from \'@material-ui/icons/VisibilityOff\';\n\nconst ranges = [\n  {\n    value: \'0-20\',\n    label: \'0 to 20\',\n  },\n  {\n    value: \'21-50\',\n    label: \'21 to 50\',\n  },\n  {\n    value: \'51-100\',\n    label: \'51 to 100\',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    flexBasis: 200,\n  },\n}));\n\nexport default function FilledInputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: \'\',\n    password: \'\',\n    weight: \'\',\n    weightRange: \'\',\n    showPassword: false,\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        id="filled-simple-start-adornment"\n        className={clsx(classes.margin, classes.textField)}\n        variant="filled"\n        label="With filled TextField"\n        InputProps={{\n          startAdornment: <InputAdornment position="start">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        select\n        className={clsx(classes.margin, classes.textField)}\n        variant="filled"\n        label="With Select"\n        value={values.weightRange}\n        onChange={handleChange(\'weightRange\')}\n        InputProps={{\n          startAdornment: <InputAdornment position="start">Kg</InputAdornment>,\n        }}\n      >\n        {ranges.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id="filled-adornment-amount"\n        className={clsx(classes.margin, classes.textField)}\n        variant="filled"\n        label="Amount"\n        value={values.amount}\n        onChange={handleChange(\'amount\')}\n        InputProps={{\n          startAdornment: <InputAdornment position="start">$</InputAdornment>,\n        }}\n      />\n      <TextField\n        id="filled-adornment-weight"\n        className={clsx(classes.margin, classes.textField)}\n        variant="filled"\n        label="Weight"\n        value={values.weight}\n        onChange={handleChange(\'weight\')}\n        helperText="Weight"\n        InputProps={{\n          endAdornment: <InputAdornment position="end">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        id="filled-adornment-password"\n        className={clsx(classes.margin, classes.textField)}\n        variant="filled"\n        type={values.showPassword ? \'text\' : \'password\'}\n        label="Password"\n        value={values.password}\n        onChange={handleChange(\'password\')}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position="end">\n              <IconButton\n                edge="end"\n                aria-label="toggle password visibility"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n              >\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n      <TextField\n        id="filled-adornment-dense"\n        className={clsx(classes.margin, classes.textField)}\n        variant="filled"\n        margin="dense"\n        label="Amount in Euro"\n        InputProps={{\n          startAdornment: <InputAdornment position="start">\u20ac</InputAdornment>,\n        }}\n      />\n      <TextField\n        id="filled-adornment-extra-dense"\n        className={clsx(classes.margin, classes.textField)}\n        variant="filled"\n        margin="dense"\n        hiddenLabel\n        InputProps={{\n          inputProps: {\n            \'aria-label\': \'amount in Euro\',\n          },\n          startAdornment: <InputAdornment position="start">\u20ac</InputAdornment>,\n        }}\n      />\n    </div>\n  );\n}\n'},2027:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return F});var t=a(30),l=a(10),r=a(16),i=a(0),o=a.n(i),s=a(3),m=a(926),d=a(465),c=a(888),u=a(896),p=a(890),f=a(1234),h=a.n(f),b=a(1235),g=a.n(b),x=[{value:"0-20",label:"0 to 20"},{value:"21-50",label:"21 to 50"},{value:"51-100",label:"51 to 100"}],v=Object(m.a)(function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing(1)},textField:{flexBasis:200}}});function F(){var e=v(),n=o.a.useState({amount:"",password:"",weight:"",weightRange:"",showPassword:!1}),a=Object(r.a)(n,2),i=a[0],m=a[1],f=function(e){return function(n){m(Object(l.a)({},i,Object(t.a)({},e,n.target.value)))}};return o.a.createElement("div",{className:e.root},o.a.createElement(u.a,{id:"outlined-simple-start-adornment",className:Object(s.a)(e.margin,e.textField),variant:"outlined",label:"With outlined TextField",InputProps:{startAdornment:o.a.createElement(c.a,{position:"start"},"Kg")}}),o.a.createElement(u.a,{select:!0,className:Object(s.a)(e.margin,e.textField),variant:"outlined",label:"With Select",value:i.weightRange,onChange:f("weightRange"),InputProps:{startAdornment:o.a.createElement(c.a,{position:"start"},"Kg")}},x.map(function(e){return o.a.createElement(p.a,{key:e.value,value:e.value},e.label)})),o.a.createElement(u.a,{id:"outlined-adornment-amount",className:Object(s.a)(e.margin,e.textField),variant:"outlined",label:"Amount",value:i.amount,onChange:f("amount"),InputProps:{startAdornment:o.a.createElement(c.a,{position:"start"},"$")}}),o.a.createElement(u.a,{id:"outlined-adornment-weight",className:Object(s.a)(e.margin,e.textField),variant:"outlined",label:"Weight",value:i.weight,onChange:f("weight"),helperText:"Weight",InputProps:{endAdornment:o.a.createElement(c.a,{position:"end"},"Kg")}}),o.a.createElement(u.a,{id:"outlined-adornment-password",className:Object(s.a)(e.margin,e.textField),variant:"outlined",type:i.showPassword?"text":"password",label:"Password",value:i.password,onChange:f("password"),InputProps:{endAdornment:o.a.createElement(c.a,{position:"end"},o.a.createElement(d.a,{edge:"end","aria-label":"toggle password visibility",onClick:function(){m(Object(l.a)({},i,{showPassword:!i.showPassword}))},onMouseDown:function(e){e.preventDefault()}},i.showPassword?o.a.createElement(g.a,null):o.a.createElement(h.a,null)))}}))}},2028:function(e,n){e.exports="import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    flexBasis: 200,\n  },\n}));\n\nexport default function OutlinedInputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        id=\"outlined-simple-start-adornment\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"With outlined TextField\"\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        select\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"With Select\"\n        value={values.weightRange}\n        onChange={handleChange('weightRange')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      >\n        {ranges.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id=\"outlined-adornment-amount\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"Amount\"\n        value={values.amount}\n        onChange={handleChange('amount')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n        }}\n      />\n      <TextField\n        id=\"outlined-adornment-weight\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"Weight\"\n        value={values.weight}\n        onChange={handleChange('weight')}\n        helperText=\"Weight\"\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        id=\"outlined-adornment-password\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        type={values.showPassword ? 'text' : 'password'}\n        label=\"Password\"\n        value={values.password}\n        onChange={handleChange('password')}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                edge=\"end\"\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n              >\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  );\n}\n"},2029:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return s});var t=a(0),l=a.n(t),r=a(926),i=a(896),o=Object(r.a)(function(e){return{container:{display:"flex",flexWrap:"wrap"},textField:{marginLeft:e.spacing(1),marginRight:e.spacing(1),width:200}}});function s(){var e=o();return l.a.createElement("div",{className:e.container},l.a.createElement(i.a,{label:"None",id:"margin-none",defaultValue:"Default Value",className:e.textField,helperText:"Some important text"}),l.a.createElement(i.a,{label:"Dense",id:"margin-dense",defaultValue:"Default Value",className:e.textField,helperText:"Some important text",margin:"dense"}),l.a.createElement(i.a,{label:"Normal",id:"margin-normal",defaultValue:"Default Value",className:e.textField,helperText:"Some important text",margin:"normal"}))}},2030:function(e,n){e.exports='import React from \'react\';\nimport { makeStyles } from \'@material-ui/core/styles\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nexport default function TextFieldMargins() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <TextField\n        label="None"\n        id="margin-none"\n        defaultValue="Default Value"\n        className={classes.textField}\n        helperText="Some important text"\n      />\n      <TextField\n        label="Dense"\n        id="margin-dense"\n        defaultValue="Default Value"\n        className={classes.textField}\n        helperText="Some important text"\n        margin="dense"\n      />\n      <TextField\n        label="Normal"\n        id="margin-normal"\n        defaultValue="Default Value"\n        className={classes.textField}\n        helperText="Some important text"\n        margin="normal"\n      />\n    </div>\n  );\n}\n'},2031:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return F});var t=a(30),l=a(10),r=a(16),i=a(135),o=a(0),s=a.n(o),m=a(2032),d=a.n(m),c=a(2033),u=a(926),p=a(320),f=a(468),h=a(896),b=a(462),g=Object(u.a)(function(e){return{container:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing(1)}}});function x(e){var n=e.inputRef,a=Object(i.a)(e,["inputRef"]);return s.a.createElement(d.a,Object.assign({},a,{ref:function(e){n(e?e.inputElement:null)},mask:["(",/[1-9]/,/\d/,/\d/,")"," ",/\d/,/\d/,/\d/,"-",/\d/,/\d/,/\d/,/\d/],placeholderChar:"\u2000",showMask:!0}))}function v(e){var n=e.inputRef,a=e.onChange,t=Object(i.a)(e,["inputRef","onChange"]);return s.a.createElement(c.a,Object.assign({},t,{getInputRef:n,onValueChange:function(e){a({target:{value:e.value}})},thousandSeparator:!0,prefix:"$"}))}function F(){var e=g(),n=s.a.useState({textmask:"(1\u2000\u2000) \u2000\u2000\u2000-\u2000\u2000\u2000\u2000",numberformat:"1320"}),a=Object(r.a)(n,2),i=a[0],o=a[1],m=function(e){return function(n){o(Object(l.a)({},i,Object(t.a)({},e,n.target.value)))}};return s.a.createElement("div",{className:e.container},s.a.createElement(b.a,{className:e.formControl},s.a.createElement(f.a,{htmlFor:"formatted-text-mask-input"},"react-text-mask"),s.a.createElement(p.a,{value:i.textmask,onChange:m("textmask"),id:"formatted-text-mask-input",inputComponent:x})),s.a.createElement(h.a,{className:e.formControl,label:"react-number-format",value:i.numberformat,onChange:m("numberformat"),id:"formatted-numberformat-input",InputProps:{inputComponent:v}}))}},2034:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={ref => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      prefix=\"$\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default function FormattedInputs() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    textmask: '(1\u2000\u2000) \u2000\u2000\u2000-\u2000\u2000\u2000\u2000',\n    numberformat: '1320',\n  });\n\n  const handleChange = name => event => {\n    setValues({\n      ...values,\n      [name]: event.target.value,\n    });\n  };\n\n  return (\n    <div className={classes.container}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"formatted-text-mask-input\">react-text-mask</InputLabel>\n        <Input\n          value={values.textmask}\n          onChange={handleChange('textmask')}\n          id=\"formatted-text-mask-input\"\n          inputComponent={TextMaskCustom}\n        />\n      </FormControl>\n      <TextField\n        className={classes.formControl}\n        label=\"react-number-format\"\n        value={values.numberformat}\n        onChange={handleChange('numberformat')}\n        id=\"formatted-numberformat-input\"\n        InputProps={{\n          inputComponent: NumberFormatCustom,\n        }}\n      />\n    </div>\n  );\n}\n"},2242:function(e,n,a){"use strict";a.r(n);var t=a(0),l=a.n(t),r=a(20),i=a(889),o=a(131),s=a(899),m=a(470),d=Object(m.a)(function(e){return{layoutRoot:{"& .description":{marginBottom:16}}}});n.default=function(e){var n=d();return l.a.createElement(r.s,{classes:{root:n.layoutRoot},header:l.a.createElement("div",{className:"flex flex-1 items-center justify-between p-24"},l.a.createElement("div",{className:"flex flex-col"},l.a.createElement("div",{className:"flex items-center mb-16"},l.a.createElement(i.a,{className:"text-18",color:"action"},"home"),l.a.createElement(i.a,{className:"text-16",color:"action"},"chevron_right"),l.a.createElement(o.a,{color:"textSecondary"},"Documentation"),l.a.createElement(i.a,{className:"text-16",color:"action"},"chevron_right"),l.a.createElement(o.a,{color:"textSecondary"},"Material UI Components")),l.a.createElement(o.a,{variant:"h6"},"Text Fields")),l.a.createElement(s.a,{className:"normal-case",variant:"contained",component:"a",href:"https://material-ui.com/components/text-fields",target:"_blank",role:"button"},l.a.createElement(i.a,{className:"mr-4"},"link"),"Reference")),content:l.a.createElement("div",{className:"p-24 max-w-2xl"},l.a.createElement(o.a,{className:"text-44 mt-32 mb-8",component:"h1"},"Text Fields"),l.a.createElement(o.a,{className:"description"},"Text fields let users enter and edit text."),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement("a",{href:"https://material.io/design/components/text-fields.html"},"Text fields")," allow users to enter text into a UI. They typically appear in forms and dialogs."),l.a.createElement(o.a,{className:"text-32 mt-32 mb-8",component:"h2"},"TextField"),l.a.createElement(o.a,{className:"mb-16",component:"div"},"The ",l.a.createElement("code",null,"TextField")," wrapper component is a complete form control including a label, input and help text."),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:a(2006).default,raw:a(2007)})),l.a.createElement("blockquote",null,l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement("strong",null,"Note:")," This version of the text field is no longer documented in the ",l.a.createElement("a",{href:"https://material.io/"},"Material Design guidelines"),", but Material-UI will continue to support it.")),l.a.createElement(o.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Outlined"),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement("code",null,"TextField")," supports outlined styling."),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:a(2008).default,raw:a(2009)})),l.a.createElement(o.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Filled"),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement("code",null,"TextField")," supports filled styling."),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:a(2010).default,raw:a(2011)})),l.a.createElement(o.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Components"),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement("code",null,"TextField")," is composed of smaller components (",l.a.createElement("a",{href:"/api/form-control/"},l.a.createElement("code",null,"FormControl")),",",l.a.createElement("a",{href:"/api/input/"},l.a.createElement("code",null,"Input")),",",l.a.createElement("a",{href:"/api/filled-input/"},l.a.createElement("code",null,"FilledInput")),",",l.a.createElement("a",{href:"/api/input-label/"},l.a.createElement("code",null,"InputLabel")),",",l.a.createElement("a",{href:"/api/outlined-input/"},l.a.createElement("code",null,"OutlinedInput")),", and ",l.a.createElement("a",{href:"/api/form-helper-text/"},l.a.createElement("code",null,"FormHelperText")),") that you can leverage directly to significantly customize your form inputs."),l.a.createElement(o.a,{className:"mb-16",component:"div"},"You might also have noticed that some native HTML input properties are missing from the ",l.a.createElement("code",null,"TextField")," component. This is on purpose. The component takes care of the most used properties, then it's up to the user to use the underlying component shown in the following demo. Still, you can use ",l.a.createElement("code",null,"inputProps")," (and ",l.a.createElement("code",null,"InputProps"),", ",l.a.createElement("code",null,"InputLabelProps")," properties) if you want to avoid some boilerplate."),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:a(2012).default,raw:a(2013)})),l.a.createElement(o.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Inputs"),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:a(2014).default,raw:a(2015)})),l.a.createElement(o.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Customized inputs"),l.a.createElement(o.a,{className:"mb-16",component:"div"},"Here are some examples of customizing the component. You can learn more about this in the",l.a.createElement("a",{href:"/customization/components/"},"overrides documentation page"),"."),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:a(2016).default,raw:a(2017)})),l.a.createElement(o.a,{className:"mb-16",component:"div"},"Customization does not stop at CSS, you can use composition to build custom components and give your app a unique feel. Below is an example using the ",l.a.createElement("a",{href:"/api/input-base/"},l.a.createElement("code",null,"InputBase"))," component, inspired by Google Maps."),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:a(2018).default,raw:a(2020)})),l.a.createElement(o.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Input Adornments"),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement("code",null,"Input")," allows the provision of ",l.a.createElement("code",null,"InputAdornment"),". These can be used to add a prefix, a suffix or an action to an input. For instance, you can use an icon button to hide or reveal the password."),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:a(2021).default,raw:a(2022)})),l.a.createElement(o.a,{className:"text-24 mt-32 mb-8",component:"h3"},"With icon"),l.a.createElement(o.a,{className:"mb-16",component:"div"},"Icons can be specified as prepended or appended."),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:a(2023).default,raw:a(2024)})),l.a.createElement(o.a,{className:"text-24 mt-32 mb-8",component:"h3"},"Filled Input Adornments"),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:a(2025).default,raw:a(2026)})),l.a.createElement(o.a,{className:"text-24 mt-32 mb-8",component:"h3"},"Outlined Input Adornments"),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:a(2027).default,raw:a(2028)})),l.a.createElement(o.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Layout"),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement("code",null,"TextField"),", ",l.a.createElement("code",null,"FormControl")," allow the specification of ",l.a.createElement("code",null,"margin")," to alter the vertical spacing of inputs. Using",l.a.createElement("code",null,"none")," (default) will not apply margins to the ",l.a.createElement("code",null,"FormControl"),", whereas ",l.a.createElement("code",null,"dense")," and ",l.a.createElement("code",null,"normal")," will as well as alter other styles to meet the specification."),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:a(2029).default,raw:a(2030)})),l.a.createElement(o.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Limitations"),l.a.createElement(o.a,{className:"mb-16",component:"div"},'The input label "shrink" state isn\'t always correct. The input label is supposed to shrink as soon as the input is displaying something. In some circumstances, we can\'t determine the "shrink" state (number input, datetime input, Stripe input). You might notice an overlap.'),l.a.createElement(o.a,{className:"mb-16",component:"div"},' src="/material-ui-static/images/text-fields/shrink.png" alt="shrink/>'),l.a.createElement(o.a,{className:"mb-16",component:"div"},'To workaround the issue, you can force the "shrink" state of the label.'),l.a.createElement(r.k,{component:"pre",className:"language-jsx"}," \n<TextField InputLabelProps={{ shrink: true }} />\n"),l.a.createElement(o.a,{className:"mb-16",component:"div"},"or"),l.a.createElement(r.k,{component:"pre",className:"language-jsx"}," \n<InputLabel shrink>Count</InputLabel>\n"),l.a.createElement(o.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Integration with 3rd party input libraries"),l.a.createElement(o.a,{className:"mb-16",component:"div"},"You can use third-party libraries to format an input. You have to provide a custom implementation of the ",l.a.createElement("code",null,"<input>")," element with the ",l.a.createElement("code",null,"inputComponent")," property."),l.a.createElement(o.a,{className:"mb-16",component:"div"},"The following demo uses the ",l.a.createElement("a",{href:"https://github.com/text-mask/text-mask"},"react-text-mask")," and ",l.a.createElement("a",{href:"https://github.com/s-yadav/react-number-format"},"react-number-format")," libraries. The same concept could be applied to ",l.a.createElement("a",{href:"https://github.com/mui-org/material-ui/issues/16037"},"e.g. react-stripe-element"),"."),l.a.createElement(o.a,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:a(2031).default,raw:a(2034)})),l.a.createElement(o.a,{className:"mb-16",component:"div"},"The provided input component should handle the ",l.a.createElement("code",null,"inputRef")," property. The property should be called with a value that implements the following interface:"),l.a.createElement(r.k,{component:"pre",className:"language-ts"}," \ninterface InputElement {\n  focus(): void;\n  value?: string;\n}\n"),l.a.createElement(r.k,{component:"pre",className:"language-jsx"}," \nfunction MyInputComponent(props) {\n  const { component: Component, inputRef, ...other } = props;\n\n  // implement `InputElement` interface\n  React.useImperativeHandle(inputRef, () => ({\n    focus: () => {\n      // logic to focus the rendered component from 3rd party belongs here\n    },\n    // hiding the value e.g. react-stripe-elements\n  }));\n\n  // `Component` will be your `SomeThirdPartyComponent` from below\n  return <Component {...other} />;\n}\n\n// usage\n<TextField\n  InputProps={{\n    inputComponent: MyInputComponent,\n    inputProps: { component: SomeThirdPartyComponent },\n\n/>;\n"),l.a.createElement(o.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Accessibility"),l.a.createElement(o.a,{className:"mb-16",component:"div"},"In order for the text field to be accessible, ",l.a.createElement("strong",null,"the input should be linked to the label and the helper text"),". The underlying DOM nodes should have this structure."),l.a.createElement(r.k,{component:"pre",className:"language-jsx"},' \n<div className="form-control">\n  <label for="my-input">Email address</label>\n  <input id="my-input" aria-describedby="my-helper-text" />\n  <span id="my-helper-text">We\'ll never share your email.</span>\n</div>\n'),l.a.createElement("ul",null,l.a.createElement("li",null,"If you are using the ",l.a.createElement("code",null,"TextField")," component, you just have to provide a unique ",l.a.createElement("code",null,"id"),"."),l.a.createElement("li",null,"If you are composing the component:")),l.a.createElement(r.k,{component:"pre",className:"language-jsx"},' \n<FormControl>\n  <InputLabel htmlFor="my-input">Email address</InputLabel>\n  <Input id="my-input" aria-describedby="my-helper-text" />\n  <FormHelperText id="my-helper-text">We\'ll never share your email.</FormHelperText>\n</FormControl>\n'),l.a.createElement(o.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Complementary projects"),l.a.createElement(o.a,{className:"mb-16",component:"div"},"For more advanced use cases you might be able to take advantage of:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("a",{href:"https://github.com/erikras/redux-form-material-ui"},"redux-form-material-ui")," A set of wrapper components to facilitate using Material UI with Redux Form."),l.a.createElement("li",null,l.a.createElement("a",{href:"https://github.com/stackworx/formik-material-ui"},"formik-material-ui")," Bindings for using Material-UI with formik."),l.a.createElement("li",null,l.a.createElement("a",{href:"https://github.com/Deadly0/final-form-material-ui"},"final-form-material-ui")," A set of wrapper components to facilitate using Material UI with Final Form.")))})}}}]);