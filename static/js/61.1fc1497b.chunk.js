(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{1425:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return T});var a=t(11),s=t(16),l=t(10),o=t(135),r=t(0),i=t.n(r),p=t(316),u=t.n(p),c=t(2123),d=t(926),g=t(896),m=t(854),h=t(153),b=t(890),f=t(903),P=[{label:"Afghanistan"},{label:"Aland Islands"},{label:"Albania"},{label:"Algeria"},{label:"American Samoa"},{label:"Andorra"},{label:"Angola"},{label:"Anguilla"},{label:"Antarctica"},{label:"Antigua and Barbuda"},{label:"Argentina"},{label:"Armenia"},{label:"Aruba"},{label:"Australia"},{label:"Austria"},{label:"Azerbaijan"},{label:"Bahamas"},{label:"Bahrain"},{label:"Bangladesh"},{label:"Barbados"},{label:"Belarus"},{label:"Belgium"},{label:"Belize"},{label:"Benin"},{label:"Bermuda"},{label:"Bhutan"},{label:"Bolivia, Plurinational State of"},{label:"Bonaire, Sint Eustatius and Saba"},{label:"Bosnia and Herzegovina"},{label:"Botswana"},{label:"Bouvet Island"},{label:"Brazil"},{label:"British Indian Ocean Territory"},{label:"Brunei Darussalam"}];function y(e){var n=e.InputProps,t=e.classes,a=e.ref,s=Object(o.a)(e,["InputProps","classes","ref"]);return i.a.createElement(g.a,Object.assign({InputProps:Object(l.a)({inputRef:a,classes:{root:t.inputRoot,input:t.inputInput}},n)},s))}function v(e){var n=e.suggestion,t=e.index,a=e.itemProps,s=e.highlightedIndex===t,l=(e.selectedItem||"").indexOf(n.label)>-1;return i.a.createElement(b.a,Object.assign({},a,{key:n.label,selected:s,component:"div",style:{fontWeight:l?500:400}}),n.label)}function I(e){var n=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}).showEmpty,t=void 0!==n&&n,a=u()(e.trim()).toLowerCase(),s=a.length,l=0;return 0!==s||t?P.filter(function(e){var n=l<5&&e.label.slice(0,s).toLowerCase()===a;return n&&(l+=1),n}):[]}function S(e){var n=e.classes,t=i.a.useState(""),l=Object(s.a)(t,2),r=l[0],p=l[1],u=i.a.useState([]),d=Object(s.a)(u,2),g=d[0],m=d[1];function b(e){g.length&&!r.length&&"Backspace"===e.key&&m(g.slice(0,g.length-1))}var P=function(e){return function(){var n=Object(a.a)(g);n.splice(n.indexOf(e),1),m(n)}};return i.a.createElement(c.a,{id:"downshift-multiple",inputValue:r,onChange:function(e){var n=Object(a.a)(g);-1===n.indexOf(e)&&(n=[].concat(Object(a.a)(n),[e])),p(""),m(n)},selectedItem:g},function(e){var t=e.getInputProps,a=e.getItemProps,s=e.getLabelProps,l=e.isOpen,r=e.inputValue,u=e.selectedItem,c=e.highlightedIndex,d=t({onKeyDown:b,placeholder:"Select multiple countries"}),m=d.onBlur,S=d.onChange,B=d.onFocus,w=Object(o.a)(d,["onBlur","onChange","onFocus"]);return i.a.createElement("div",{className:n.container},y({fullWidth:!0,classes:n,label:"Countries",InputLabelProps:s(),InputProps:{startAdornment:g.map(function(e){return i.a.createElement(f.a,{key:e,tabIndex:-1,label:e,className:n.chip,onDelete:P(e)})}),onBlur:m,onChange:function(e){!function(e){p(e.target.value)}(e),S(e)},onFocus:B},inputProps:w}),l?i.a.createElement(h.a,{className:n.paper,square:!0},I(r).map(function(e,n){return v({suggestion:e,index:n,itemProps:a({item:e.label}),highlightedIndex:c,selectedItem:u})})):null)})}var B,w=Object(d.a)(function(e){return{root:{flexGrow:1,height:250},container:{flexGrow:1,position:"relative"},paper:{position:"absolute",zIndex:1,marginTop:e.spacing(1),left:0,right:0},chip:{margin:e.spacing(.5,.25)},inputRoot:{flexWrap:"wrap"},inputInput:{width:"auto",flexGrow:1},divider:{height:e.spacing(2)}}});function T(){var e=w();return i.a.createElement("div",{className:e.root},i.a.createElement(c.a,{id:"downshift-simple"},function(n){var t=n.getInputProps,a=n.getItemProps,s=n.getLabelProps,l=n.getMenuProps,r=n.highlightedIndex,p=n.inputValue,u=n.isOpen,c=n.selectedItem,d=t({placeholder:"Search for a country (start with a)"}),g=d.onBlur,m=d.onFocus,b=Object(o.a)(d,["onBlur","onFocus"]);return i.a.createElement("div",{className:e.container},y({fullWidth:!0,classes:e,label:"Country",InputLabelProps:s({shrink:!0}),InputProps:{onBlur:g,onFocus:m},inputProps:b}),i.a.createElement("div",l(),u?i.a.createElement(h.a,{className:e.paper,square:!0},I(p).map(function(e,n){return v({suggestion:e,index:n,itemProps:a({item:e.label}),highlightedIndex:r,selectedItem:c})})):null))}),i.a.createElement("div",{className:e.divider}),i.a.createElement(S,{classes:e}),i.a.createElement("div",{className:e.divider}),i.a.createElement(c.a,{id:"downshift-popper"},function(n){var t=n.getInputProps,a=n.getItemProps,s=n.getLabelProps,l=n.getMenuProps,r=n.highlightedIndex,p=n.inputValue,u=n.isOpen,c=n.selectedItem,d=t({placeholder:"With Popper"}),g=d.onBlur,b=d.onFocus,f=Object(o.a)(d,["onBlur","onFocus"]);return i.a.createElement("div",{className:e.container},y({fullWidth:!0,classes:e,label:"Country",InputProps:{onBlur:g,onFocus:b},InputLabelProps:s({shrink:!0}),inputProps:f,ref:function(e){B=e}}),i.a.createElement(m.a,{open:u,anchorEl:B},i.a.createElement("div",u?l({},{suppressRefError:!0}):{},i.a.createElement(h.a,{square:!0,style:{marginTop:8,width:B?B.clientWidth:void 0}},I(p).map(function(e,n){return v({suggestion:e,index:n,itemProps:a({item:e.label}),highlightedIndex:r,selectedItem:c})})))))}),i.a.createElement("div",{className:e.divider}),i.a.createElement(c.a,{id:"downshift-options"},function(n){var t=n.clearSelection,a=n.getInputProps,s=n.getItemProps,l=n.getLabelProps,r=n.getMenuProps,p=n.highlightedIndex,u=n.inputValue,c=n.isOpen,d=n.openMenu,g=n.selectedItem,m=a({onChange:function(e){""===e.target.value&&t()},onFocus:d,placeholder:"With the clear & show empty options"}),b=m.onBlur,f=m.onChange,P=m.onFocus,S=Object(o.a)(m,["onBlur","onChange","onFocus"]);return i.a.createElement("div",{className:e.container},y({fullWidth:!0,classes:e,label:"Countries",InputLabelProps:l({shrink:!0}),InputProps:{onBlur:b,onChange:f,onFocus:P},inputProps:S}),i.a.createElement("div",r(),c?i.a.createElement(h.a,{className:e.paper,square:!0},I(u,{showEmpty:!0}).map(function(e,n){return v({suggestion:e,index:n,itemProps:s({item:e.label}),highlightedIndex:p,selectedItem:g})})):null))}))}},1426:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\n\nconst suggestions = [\n  { label: 'Afghanistan' },\n  { label: 'Aland Islands' },\n  { label: 'Albania' },\n  { label: 'Algeria' },\n  { label: 'American Samoa' },\n  { label: 'Andorra' },\n  { label: 'Angola' },\n  { label: 'Anguilla' },\n  { label: 'Antarctica' },\n  { label: 'Antigua and Barbuda' },\n  { label: 'Argentina' },\n  { label: 'Armenia' },\n  { label: 'Aruba' },\n  { label: 'Australia' },\n  { label: 'Austria' },\n  { label: 'Azerbaijan' },\n  { label: 'Bahamas' },\n  { label: 'Bahrain' },\n  { label: 'Bangladesh' },\n  { label: 'Barbados' },\n  { label: 'Belarus' },\n  { label: 'Belgium' },\n  { label: 'Belize' },\n  { label: 'Benin' },\n  { label: 'Bermuda' },\n  { label: 'Bhutan' },\n  { label: 'Bolivia, Plurinational State of' },\n  { label: 'Bonaire, Sint Eustatius and Saba' },\n  { label: 'Bosnia and Herzegovina' },\n  { label: 'Botswana' },\n  { label: 'Bouvet Island' },\n  { label: 'Brazil' },\n  { label: 'British Indian Ocean Territory' },\n  { label: 'Brunei Darussalam' },\n];\n\nfunction renderInput(inputProps) {\n  const { InputProps, classes, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      InputProps={{\n        inputRef: ref,\n        classes: {\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        },\n        ...InputProps,\n      }}\n      {...other}\n    />\n  );\n}\n\nrenderInput.propTypes = {\n  classes: PropTypes.object.isRequired,\n  InputProps: PropTypes.object,\n};\n\nfunction renderSuggestion(suggestionProps) {\n  const { suggestion, index, itemProps, highlightedIndex, selectedItem } = suggestionProps;\n  const isHighlighted = highlightedIndex === index;\n  const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n\n  return (\n    <MenuItem\n      {...itemProps}\n      key={suggestion.label}\n      selected={isHighlighted}\n      component=\"div\"\n      style={{\n        fontWeight: isSelected ? 500 : 400,\n      }}\n    >\n      {suggestion.label}\n    </MenuItem>\n  );\n}\n\nrenderSuggestion.propTypes = {\n  highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\n  index: PropTypes.number.isRequired,\n  itemProps: PropTypes.object.isRequired,\n  selectedItem: PropTypes.string.isRequired,\n  suggestion: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nfunction getSuggestions(value, { showEmpty = false } = {}) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0 && !showEmpty\n    ? []\n    : suggestions.filter(suggestion => {\n        const keep =\n          count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n}\n\nfunction DownshiftMultiple(props) {\n  const { classes } = props;\n  const [inputValue, setInputValue] = React.useState('');\n  const [selectedItem, setSelectedItem] = React.useState([]);\n\n  function handleKeyDown(event) {\n    if (selectedItem.length && !inputValue.length && event.key === 'Backspace') {\n      setSelectedItem(selectedItem.slice(0, selectedItem.length - 1));\n    }\n  }\n\n  function handleInputChange(event) {\n    setInputValue(event.target.value);\n  }\n\n  function handleChange(item) {\n    let newSelectedItem = [...selectedItem];\n    if (newSelectedItem.indexOf(item) === -1) {\n      newSelectedItem = [...newSelectedItem, item];\n    }\n    setInputValue('');\n    setSelectedItem(newSelectedItem);\n  }\n\n  const handleDelete = item => () => {\n    const newSelectedItem = [...selectedItem];\n    newSelectedItem.splice(newSelectedItem.indexOf(item), 1);\n    setSelectedItem(newSelectedItem);\n  };\n\n  return (\n    <Downshift\n      id=\"downshift-multiple\"\n      inputValue={inputValue}\n      onChange={handleChange}\n      selectedItem={selectedItem}\n    >\n      {({\n        getInputProps,\n        getItemProps,\n        getLabelProps,\n        isOpen,\n        inputValue: inputValue2,\n        selectedItem: selectedItem2,\n        highlightedIndex,\n      }) => {\n        const { onBlur, onChange, onFocus, ...inputProps } = getInputProps({\n          onKeyDown: handleKeyDown,\n          placeholder: 'Select multiple countries',\n        });\n\n        return (\n          <div className={classes.container}>\n            {renderInput({\n              fullWidth: true,\n              classes,\n              label: 'Countries',\n              InputLabelProps: getLabelProps(),\n              InputProps: {\n                startAdornment: selectedItem.map(item => (\n                  <Chip\n                    key={item}\n                    tabIndex={-1}\n                    label={item}\n                    className={classes.chip}\n                    onDelete={handleDelete(item)}\n                  />\n                )),\n                onBlur,\n                onChange: event => {\n                  handleInputChange(event);\n                  onChange(event);\n                },\n                onFocus,\n              },\n              inputProps,\n            })}\n\n            {isOpen ? (\n              <Paper className={classes.paper} square>\n                {getSuggestions(inputValue2).map((suggestion, index) =>\n                  renderSuggestion({\n                    suggestion,\n                    index,\n                    itemProps: getItemProps({ item: suggestion.label }),\n                    highlightedIndex,\n                    selectedItem: selectedItem2,\n                  }),\n                )}\n              </Paper>\n            ) : null}\n          </div>\n        );\n      }}\n    </Downshift>\n  );\n}\n\nDownshiftMultiple.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n  },\n  container: {\n    flexGrow: 1,\n    position: 'relative',\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25),\n  },\n  inputRoot: {\n    flexWrap: 'wrap',\n  },\n  inputInput: {\n    width: 'auto',\n    flexGrow: 1,\n  },\n  divider: {\n    height: theme.spacing(2),\n  },\n}));\n\nlet popperNode;\n\nexport default function IntegrationDownshift() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Downshift id=\"downshift-simple\">\n        {({\n          getInputProps,\n          getItemProps,\n          getLabelProps,\n          getMenuProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          selectedItem,\n        }) => {\n          const { onBlur, onFocus, ...inputProps } = getInputProps({\n            placeholder: 'Search for a country (start with a)',\n          });\n\n          return (\n            <div className={classes.container}>\n              {renderInput({\n                fullWidth: true,\n                classes,\n                label: 'Country',\n                InputLabelProps: getLabelProps({ shrink: true }),\n                InputProps: { onBlur, onFocus },\n                inputProps,\n              })}\n\n              <div {...getMenuProps()}>\n                {isOpen ? (\n                  <Paper className={classes.paper} square>\n                    {getSuggestions(inputValue).map((suggestion, index) =>\n                      renderSuggestion({\n                        suggestion,\n                        index,\n                        itemProps: getItemProps({ item: suggestion.label }),\n                        highlightedIndex,\n                        selectedItem,\n                      }),\n                    )}\n                  </Paper>\n                ) : null}\n              </div>\n            </div>\n          );\n        }}\n      </Downshift>\n      <div className={classes.divider} />\n      <DownshiftMultiple classes={classes} />\n      <div className={classes.divider} />\n      <Downshift id=\"downshift-popper\">\n        {({\n          getInputProps,\n          getItemProps,\n          getLabelProps,\n          getMenuProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          selectedItem,\n        }) => {\n          const { onBlur, onFocus, ...inputProps } = getInputProps({\n            placeholder: 'With Popper',\n          });\n\n          return (\n            <div className={classes.container}>\n              {renderInput({\n                fullWidth: true,\n                classes,\n                label: 'Country',\n                InputProps: { onBlur, onFocus },\n                InputLabelProps: getLabelProps({ shrink: true }),\n                inputProps,\n                ref: node => {\n                  popperNode = node;\n                },\n              })}\n\n              <Popper open={isOpen} anchorEl={popperNode}>\n                <div {...(isOpen ? getMenuProps({}, { suppressRefError: true }) : {})}>\n                  <Paper\n                    square\n                    style={{ marginTop: 8, width: popperNode ? popperNode.clientWidth : undefined }}\n                  >\n                    {getSuggestions(inputValue).map((suggestion, index) =>\n                      renderSuggestion({\n                        suggestion,\n                        index,\n                        itemProps: getItemProps({ item: suggestion.label }),\n                        highlightedIndex,\n                        selectedItem,\n                      }),\n                    )}\n                  </Paper>\n                </div>\n              </Popper>\n            </div>\n          );\n        }}\n      </Downshift>\n      <div className={classes.divider} />\n      <Downshift id=\"downshift-options\">\n        {({\n          clearSelection,\n          getInputProps,\n          getItemProps,\n          getLabelProps,\n          getMenuProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          openMenu,\n          selectedItem,\n        }) => {\n          const { onBlur, onChange, onFocus, ...inputProps } = getInputProps({\n            onChange: event => {\n              if (event.target.value === '') {\n                clearSelection();\n              }\n            },\n            onFocus: openMenu,\n            placeholder: 'With the clear & show empty options',\n          });\n\n          return (\n            <div className={classes.container}>\n              {renderInput({\n                fullWidth: true,\n                classes,\n                label: 'Countries',\n                InputLabelProps: getLabelProps({ shrink: true }),\n                InputProps: { onBlur, onChange, onFocus },\n                inputProps,\n              })}\n\n              <div {...getMenuProps()}>\n                {isOpen ? (\n                  <Paper className={classes.paper} square>\n                    {getSuggestions(inputValue, { showEmpty: true }).map((suggestion, index) =>\n                      renderSuggestion({\n                        suggestion,\n                        index,\n                        itemProps: getItemProps({ item: suggestion.label }),\n                        highlightedIndex,\n                        selectedItem,\n                      }),\n                    )}\n                  </Paper>\n                ) : null}\n              </div>\n            </div>\n          );\n        }}\n      </Downshift>\n    </div>\n  );\n}\n"},1427:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return x});var a=t(16),s=t(30),l=t(10),o=t(135),r=t(0),i=t.n(r),p=t(3),u=t(388),c=t(926),d=t(15),g=t(108),m=t(131),h=t(906),b=t(896),f=t(153),P=t(903),y=t(890),v=t(1428),I=t.n(v),S=[{label:"Afghanistan"},{label:"Aland Islands"},{label:"Albania"},{label:"Algeria"},{label:"American Samoa"},{label:"Andorra"},{label:"Angola"},{label:"Anguilla"},{label:"Antarctica"},{label:"Antigua and Barbuda"},{label:"Argentina"},{label:"Armenia"},{label:"Aruba"},{label:"Australia"},{label:"Austria"},{label:"Azerbaijan"},{label:"Bahamas"},{label:"Bahrain"},{label:"Bangladesh"},{label:"Barbados"},{label:"Belarus"},{label:"Belgium"},{label:"Belize"},{label:"Benin"},{label:"Bermuda"},{label:"Bhutan"},{label:"Bolivia, Plurinational State of"},{label:"Bonaire, Sint Eustatius and Saba"},{label:"Bosnia and Herzegovina"},{label:"Botswana"},{label:"Bouvet Island"},{label:"Brazil"},{label:"British Indian Ocean Territory"},{label:"Brunei Darussalam"}].map(function(e){return{value:e.label,label:e.label}}),B=Object(c.a)(function(e){return{root:{flexGrow:1,height:250,minWidth:290},input:{display:"flex",padding:0,height:"auto"},valueContainer:{display:"flex",flexWrap:"wrap",flex:1,alignItems:"center",overflow:"hidden"},chip:{margin:e.spacing(.5,.25)},chipFocused:{backgroundColor:Object(d.c)("light"===e.palette.type?e.palette.grey[300]:e.palette.grey[700],.08)},noOptionsMessage:{padding:e.spacing(1,2)},singleValue:{fontSize:16},placeholder:{position:"absolute",left:2,bottom:6,fontSize:16},paper:{position:"absolute",zIndex:1,marginTop:e.spacing(1),left:0,right:0},divider:{height:e.spacing(2)}}});function w(e){var n=e.inputRef,t=Object(o.a)(e,["inputRef"]);return i.a.createElement("div",Object.assign({ref:n},t))}var T={Control:function(e){var n=e.children,t=e.innerProps,a=e.innerRef,s=e.selectProps,o=s.classes,r=s.TextFieldProps;return i.a.createElement(b.a,Object.assign({fullWidth:!0,InputProps:{inputComponent:w,inputProps:Object(l.a)({className:o.input,ref:a,children:n},t)}},r))},Menu:function(e){return i.a.createElement(f.a,Object.assign({square:!0,className:e.selectProps.classes.paper},e.innerProps),e.children)},MultiValue:function(e){return i.a.createElement(P.a,{tabIndex:-1,label:e.children,className:Object(p.a)(e.selectProps.classes.chip,Object(s.a)({},e.selectProps.classes.chipFocused,e.isFocused)),onDelete:e.removeProps.onClick,deleteIcon:i.a.createElement(I.a,e.removeProps)})},NoOptionsMessage:function(e){return i.a.createElement(m.a,Object.assign({color:"textSecondary",className:e.selectProps.classes.noOptionsMessage},e.innerProps),e.children)},Option:function(e){return i.a.createElement(y.a,Object.assign({ref:e.innerRef,selected:e.isFocused,component:"div",style:{fontWeight:e.isSelected?500:400}},e.innerProps),e.children)},Placeholder:function(e){var n=e.selectProps,t=e.innerProps,a=void 0===t?{}:t,s=e.children;return i.a.createElement(m.a,Object.assign({color:"textSecondary",className:n.classes.placeholder},a),s)},SingleValue:function(e){return i.a.createElement(m.a,Object.assign({className:e.selectProps.classes.singleValue},e.innerProps),e.children)},ValueContainer:function(e){return i.a.createElement("div",{className:e.selectProps.classes.valueContainer},e.children)}};function x(){var e=B(),n=Object(g.a)(),t=i.a.useState(null),s=Object(a.a)(t,2),o=s[0],r=s[1],p=i.a.useState(null),c=Object(a.a)(p,2),d=c[0],m=c[1];var b={input:function(e){return Object(l.a)({},e,{color:n.palette.text.primary,"& input":{font:"inherit"}})}};return i.a.createElement("div",{className:e.root},i.a.createElement(h.a,null,i.a.createElement(u.a,{classes:e,styles:b,inputId:"react-select-single",TextFieldProps:{label:"Country",InputLabelProps:{htmlFor:"react-select-single",shrink:!0}},placeholder:"Search a country (start with a)",options:S,components:T,value:o,onChange:function(e){r(e)}}),i.a.createElement("div",{className:e.divider}),i.a.createElement(u.a,{classes:e,styles:b,inputId:"react-select-multiple",TextFieldProps:{label:"Countries",InputLabelProps:{htmlFor:"react-select-multiple",shrink:!0}},placeholder:"Select multiple countries",options:S,components:T,value:d,onChange:function(e){m(e)},isMulti:!0})))}},1429:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Select from 'react-select';\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nconst suggestions = [\n  { label: 'Afghanistan' },\n  { label: 'Aland Islands' },\n  { label: 'Albania' },\n  { label: 'Algeria' },\n  { label: 'American Samoa' },\n  { label: 'Andorra' },\n  { label: 'Angola' },\n  { label: 'Anguilla' },\n  { label: 'Antarctica' },\n  { label: 'Antigua and Barbuda' },\n  { label: 'Argentina' },\n  { label: 'Armenia' },\n  { label: 'Aruba' },\n  { label: 'Australia' },\n  { label: 'Austria' },\n  { label: 'Azerbaijan' },\n  { label: 'Bahamas' },\n  { label: 'Bahrain' },\n  { label: 'Bangladesh' },\n  { label: 'Barbados' },\n  { label: 'Belarus' },\n  { label: 'Belgium' },\n  { label: 'Belize' },\n  { label: 'Benin' },\n  { label: 'Bermuda' },\n  { label: 'Bhutan' },\n  { label: 'Bolivia, Plurinational State of' },\n  { label: 'Bonaire, Sint Eustatius and Saba' },\n  { label: 'Bosnia and Herzegovina' },\n  { label: 'Botswana' },\n  { label: 'Bouvet Island' },\n  { label: 'Brazil' },\n  { label: 'British Indian Ocean Territory' },\n  { label: 'Brunei Darussalam' },\n].map(suggestion => ({\n  value: suggestion.label,\n  label: suggestion.label,\n}));\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n    minWidth: 290,\n  },\n  input: {\n    display: 'flex',\n    padding: 0,\n    height: 'auto',\n  },\n  valueContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flex: 1,\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25),\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\n      0.08,\n    ),\n  },\n  noOptionsMessage: {\n    padding: theme.spacing(1, 2),\n  },\n  singleValue: {\n    fontSize: 16,\n  },\n  placeholder: {\n    position: 'absolute',\n    left: 2,\n    bottom: 6,\n    fontSize: 16,\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  divider: {\n    height: theme.spacing(2),\n  },\n}));\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nNoOptionsMessage.propTypes = {\n  /**\n   * The children to be rendered.\n   */\n  children: PropTypes.node,\n  /**\n   * Props to be passed on to the wrapper.\n   */\n  innerProps: PropTypes.object.isRequired,\n  selectProps: PropTypes.object.isRequired,\n};\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\ninputComponent.propTypes = {\n  inputRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({\n      current: PropTypes.any.isRequired,\n    }),\n  ]),\n};\n\nfunction Control(props) {\n  const {\n    children,\n    innerProps,\n    innerRef,\n    selectProps: { classes, TextFieldProps },\n  } = props;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: classes.input,\n          ref: innerRef,\n          children,\n          ...innerProps,\n        },\n      }}\n      {...TextFieldProps}\n    />\n  );\n}\n\nControl.propTypes = {\n  /**\n   * Children to render.\n   */\n  children: PropTypes.node,\n  /**\n   * The mouse down event and the innerRef to pass down to the controller element.\n   */\n  innerProps: PropTypes.shape({\n    onMouseDown: PropTypes.func.isRequired,\n  }).isRequired,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.oneOf([null]),\n    PropTypes.func,\n    PropTypes.shape({\n      current: PropTypes.any.isRequired,\n    }),\n  ]).isRequired,\n  selectProps: PropTypes.object.isRequired,\n};\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      ref={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400,\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\nOption.propTypes = {\n  /**\n   * The children to be rendered.\n   */\n  children: PropTypes.node,\n  /**\n   * props passed to the wrapping element for the group.\n   */\n  innerProps: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    key: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseOver: PropTypes.func.isRequired,\n    tabIndex: PropTypes.number.isRequired,\n  }).isRequired,\n  /**\n   * Inner ref to DOM Node\n   */\n  innerRef: PropTypes.oneOfType([\n    PropTypes.oneOf([null]),\n    PropTypes.func,\n    PropTypes.shape({\n      current: PropTypes.any.isRequired,\n    }),\n  ]).isRequired,\n  /**\n   * Whether the option is focused.\n   */\n  isFocused: PropTypes.bool.isRequired,\n  /**\n   * Whether the option is selected.\n   */\n  isSelected: PropTypes.bool.isRequired,\n};\n\nfunction Placeholder(props) {\n  const { selectProps, innerProps = {}, children } = props;\n  return (\n    <Typography color=\"textSecondary\" className={selectProps.classes.placeholder} {...innerProps}>\n      {children}\n    </Typography>\n  );\n}\n\nPlaceholder.propTypes = {\n  /**\n   * The children to be rendered.\n   */\n  children: PropTypes.node,\n  /**\n   * props passed to the wrapping element for the group.\n   */\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired,\n};\n\nfunction SingleValue(props) {\n  return (\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\n      {props.children}\n    </Typography>\n  );\n}\n\nSingleValue.propTypes = {\n  /**\n   * The children to be rendered.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the wrapping element for the group.\n   */\n  innerProps: PropTypes.any.isRequired,\n  selectProps: PropTypes.object.isRequired,\n};\n\nfunction ValueContainer(props) {\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\n}\n\nValueContainer.propTypes = {\n  /**\n   * The children to be rendered.\n   */\n  children: PropTypes.node,\n  selectProps: PropTypes.object.isRequired,\n};\n\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={clsx(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused,\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={<CancelIcon {...props.removeProps} />}\n    />\n  );\n}\n\nMultiValue.propTypes = {\n  children: PropTypes.node,\n  isFocused: PropTypes.bool.isRequired,\n  removeProps: PropTypes.shape({\n    onClick: PropTypes.func.isRequired,\n    onMouseDown: PropTypes.func.isRequired,\n    onTouchEnd: PropTypes.func.isRequired,\n  }).isRequired,\n  selectProps: PropTypes.object.isRequired,\n};\n\nfunction Menu(props) {\n  return (\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\n      {props.children}\n    </Paper>\n  );\n}\n\nMenu.propTypes = {\n  /**\n   * The children to be rendered.\n   */\n  children: PropTypes.element.isRequired,\n  /**\n   * Props to be passed to the menu wrapper.\n   */\n  innerProps: PropTypes.object.isRequired,\n  selectProps: PropTypes.object.isRequired,\n};\n\nconst components = {\n  Control,\n  Menu,\n  MultiValue,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  SingleValue,\n  ValueContainer,\n};\n\nexport default function IntegrationReactSelect() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [single, setSingle] = React.useState(null);\n  const [multi, setMulti] = React.useState(null);\n\n  function handleChangeSingle(value) {\n    setSingle(value);\n  }\n\n  function handleChangeMulti(value) {\n    setMulti(value);\n  }\n\n  const selectStyles = {\n    input: base => ({\n      ...base,\n      color: theme.palette.text.primary,\n      '& input': {\n        font: 'inherit',\n      },\n    }),\n  };\n\n  return (\n    <div className={classes.root}>\n      <NoSsr>\n        <Select\n          classes={classes}\n          styles={selectStyles}\n          inputId=\"react-select-single\"\n          TextFieldProps={{\n            label: 'Country',\n            InputLabelProps: {\n              htmlFor: 'react-select-single',\n              shrink: true,\n            },\n          }}\n          placeholder=\"Search a country (start with a)\"\n          options={suggestions}\n          components={components}\n          value={single}\n          onChange={handleChangeSingle}\n        />\n        <div className={classes.divider} />\n        <Select\n          classes={classes}\n          styles={selectStyles}\n          inputId=\"react-select-multiple\"\n          TextFieldProps={{\n            label: 'Countries',\n            InputLabelProps: {\n              htmlFor: 'react-select-multiple',\n              shrink: true,\n            },\n          }}\n          placeholder=\"Select multiple countries\"\n          options={suggestions}\n          components={components}\n          value={multi}\n          onChange={handleChangeMulti}\n          isMulti\n        />\n      </NoSsr>\n    </div>\n  );\n}\n"},1430:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return E});var a=t(30),s=t(10),l=t(16),o=t(135),r=t(0),i=t.n(r),p=t(316),u=t.n(p),c=t(295),d=t.n(c),g=t(294),m=t.n(g),h=t(379),b=t.n(h),f=t(896),P=t(153),y=t(890),v=t(854),I=t(926),S=[{label:"Afghanistan"},{label:"Aland Islands"},{label:"Albania"},{label:"Algeria"},{label:"American Samoa"},{label:"Andorra"},{label:"Angola"},{label:"Anguilla"},{label:"Antarctica"},{label:"Antigua and Barbuda"},{label:"Argentina"},{label:"Armenia"},{label:"Aruba"},{label:"Australia"},{label:"Austria"},{label:"Azerbaijan"},{label:"Bahamas"},{label:"Bahrain"},{label:"Bangladesh"},{label:"Barbados"},{label:"Belarus"},{label:"Belgium"},{label:"Belize"},{label:"Benin"},{label:"Bermuda"},{label:"Bhutan"},{label:"Bolivia, Plurinational State of"},{label:"Bonaire, Sint Eustatius and Saba"},{label:"Bosnia and Herzegovina"},{label:"Botswana"},{label:"Bouvet Island"},{label:"Brazil"},{label:"British Indian Ocean Territory"},{label:"Brunei Darussalam"}];function B(e){var n=e.classes,t=e.inputRef,a=void 0===t?function(){}:t,s=e.ref,l=Object(o.a)(e,["classes","inputRef","ref"]);return i.a.createElement(f.a,Object.assign({fullWidth:!0,InputProps:{inputRef:function(e){s(e),a(e)},classes:{input:n.input}}},l))}function w(e,n){var t=n.query,a=n.isHighlighted,s=m()(e.label,t),l=b()(e.label,s);return i.a.createElement(y.a,{selected:a,component:"div"},i.a.createElement("div",null,l.map(function(e){return i.a.createElement("span",{key:e.text,style:{fontWeight:e.highlight?500:400}},e.text)})))}function T(e){return e.label}var x=Object(I.a)(function(e){return{root:{height:250,flexGrow:1},container:{position:"relative"},suggestionsContainerOpen:{position:"absolute",zIndex:1,marginTop:e.spacing(1),left:0,right:0},suggestion:{display:"block"},suggestionsList:{margin:0,padding:0,listStyleType:"none"},divider:{height:e.spacing(2)}}});function E(){var e=x(),n=i.a.useState(null),t=Object(l.a)(n,2),o=t[0],r=t[1],p=i.a.useState({single:"",popper:""}),c=Object(l.a)(p,2),g=c[0],m=c[1],h=i.a.useState([]),b=Object(l.a)(h,2),f=b[0],y=b[1],I=function(e){return function(n,t){var l=t.newValue;m(Object(s.a)({},g,Object(a.a)({},e,l)))}},E={renderInputComponent:B,suggestions:f,onSuggestionsFetchRequested:function(e){var n=e.value;y(function(e){var n=u()(e.trim()).toLowerCase(),t=n.length,a=0;return 0===t?[]:S.filter(function(e){var s=a<5&&e.label.slice(0,t).toLowerCase()===n;return s&&(a+=1),s})}(n))},onSuggestionsClearRequested:function(){y([])},getSuggestionValue:T,renderSuggestion:w};return i.a.createElement("div",{className:e.root},i.a.createElement(d.a,Object.assign({},E,{inputProps:{classes:e,id:"react-autosuggest-simple",label:"Country",placeholder:"Search a country (start with a)",value:g.single,onChange:I("single")},theme:{container:e.container,suggestionsContainerOpen:e.suggestionsContainerOpen,suggestionsList:e.suggestionsList,suggestion:e.suggestion},renderSuggestionsContainer:function(e){return i.a.createElement(P.a,Object.assign({},e.containerProps,{square:!0}),e.children)}})),i.a.createElement("div",{className:e.divider}),i.a.createElement(d.a,Object.assign({},E,{inputProps:{classes:e,id:"react-autosuggest-popper",label:"Country",placeholder:"With Popper",value:g.popper,onChange:I("popper"),inputRef:function(e){r(e)},InputLabelProps:{shrink:!0}},theme:{suggestionsList:e.suggestionsList,suggestion:e.suggestion},renderSuggestionsContainer:function(e){return i.a.createElement(v.a,{anchorEl:o,open:Boolean(e.children)},i.a.createElement(P.a,Object.assign({square:!0},e.containerProps,{style:{width:o?o.clientWidth:void 0}}),e.children))}})))}},1431:function(e,n){e.exports="import React from 'react';\nimport deburr from 'lodash/deburr';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popper from '@material-ui/core/Popper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst suggestions = [\n  { label: 'Afghanistan' },\n  { label: 'Aland Islands' },\n  { label: 'Albania' },\n  { label: 'Algeria' },\n  { label: 'American Samoa' },\n  { label: 'Andorra' },\n  { label: 'Angola' },\n  { label: 'Anguilla' },\n  { label: 'Antarctica' },\n  { label: 'Antigua and Barbuda' },\n  { label: 'Argentina' },\n  { label: 'Armenia' },\n  { label: 'Aruba' },\n  { label: 'Australia' },\n  { label: 'Austria' },\n  { label: 'Azerbaijan' },\n  { label: 'Bahamas' },\n  { label: 'Bahrain' },\n  { label: 'Bangladesh' },\n  { label: 'Barbados' },\n  { label: 'Belarus' },\n  { label: 'Belgium' },\n  { label: 'Belize' },\n  { label: 'Benin' },\n  { label: 'Bermuda' },\n  { label: 'Bhutan' },\n  { label: 'Bolivia, Plurinational State of' },\n  { label: 'Bonaire, Sint Eustatius and Saba' },\n  { label: 'Bosnia and Herzegovina' },\n  { label: 'Botswana' },\n  { label: 'Bouvet Island' },\n  { label: 'Brazil' },\n  { label: 'British Indian Ocean Territory' },\n  { label: 'Brunei Darussalam' },\n];\n\nfunction renderInputComponent(inputProps) {\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputRef: node => {\n          ref(node);\n          inputRef(node);\n        },\n        classes: {\n          input: classes.input,\n        },\n      }}\n      {...other}\n    />\n  );\n}\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\">\n      <div>\n        {parts.map(part => (\n          <span key={part.text} style={{ fontWeight: part.highlight ? 500 : 400 }}>\n            {part.text}\n          </span>\n        ))}\n      </div>\n    </MenuItem>\n  );\n}\n\nfunction getSuggestions(value) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0\n    ? []\n    : suggestions.filter(suggestion => {\n        const keep =\n          count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 250,\n    flexGrow: 1,\n  },\n  container: {\n    position: 'relative',\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none',\n  },\n  divider: {\n    height: theme.spacing(2),\n  },\n}));\n\nexport default function IntegrationAutosuggest() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [state, setState] = React.useState({\n    single: '',\n    popper: '',\n  });\n\n  const [stateSuggestions, setSuggestions] = React.useState([]);\n\n  const handleSuggestionsFetchRequested = ({ value }) => {\n    setSuggestions(getSuggestions(value));\n  };\n\n  const handleSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  const handleChange = name => (event, { newValue }) => {\n    setState({\n      ...state,\n      [name]: newValue,\n    });\n  };\n\n  const autosuggestProps = {\n    renderInputComponent,\n    suggestions: stateSuggestions,\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\n    getSuggestionValue,\n    renderSuggestion,\n  };\n\n  return (\n    <div className={classes.root}>\n      <Autosuggest\n        {...autosuggestProps}\n        inputProps={{\n          classes,\n          id: 'react-autosuggest-simple',\n          label: 'Country',\n          placeholder: 'Search a country (start with a)',\n          value: state.single,\n          onChange: handleChange('single'),\n        }}\n        theme={{\n          container: classes.container,\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion,\n        }}\n        renderSuggestionsContainer={options => (\n          <Paper {...options.containerProps} square>\n            {options.children}\n          </Paper>\n        )}\n      />\n      <div className={classes.divider} />\n      <Autosuggest\n        {...autosuggestProps}\n        inputProps={{\n          classes,\n          id: 'react-autosuggest-popper',\n          label: 'Country',\n          placeholder: 'With Popper',\n          value: state.popper,\n          onChange: handleChange('popper'),\n          inputRef: node => {\n            setAnchorEl(node);\n          },\n          InputLabelProps: {\n            shrink: true,\n          },\n        }}\n        theme={{\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion,\n        }}\n        renderSuggestionsContainer={options => (\n          <Popper anchorEl={anchorEl} open={Boolean(options.children)}>\n            <Paper\n              square\n              {...options.containerProps}\n              style={{ width: anchorEl ? anchorEl.clientWidth : undefined }}\n            >\n              {options.children}\n            </Paper>\n          </Popper>\n        )}\n      />\n    </div>\n  );\n}\n"},2195:function(e,n,t){"use strict";t.r(n);var a=t(0),s=t.n(a),l=t(20),o=t(889),r=t(131),i=t(899),p=t(470),u=Object(p.a)(function(e){return{layoutRoot:{"& .description":{marginBottom:16}}}});n.default=function(e){var n=u();return s.a.createElement(l.s,{classes:{root:n.layoutRoot},header:s.a.createElement("div",{className:"flex flex-1 items-center justify-between p-24"},s.a.createElement("div",{className:"flex flex-col"},s.a.createElement("div",{className:"flex items-center mb-16"},s.a.createElement(o.a,{className:"text-18",color:"action"},"home"),s.a.createElement(o.a,{className:"text-16",color:"action"},"chevron_right"),s.a.createElement(r.a,{color:"textSecondary"},"Documentation"),s.a.createElement(o.a,{className:"text-16",color:"action"},"chevron_right"),s.a.createElement(r.a,{color:"textSecondary"},"Material UI Components")),s.a.createElement(r.a,{variant:"h6"},"Autocomplete")),s.a.createElement(i.a,{className:"normal-case",variant:"contained",component:"a",href:"https://material-ui.com/components/autocomplete",target:"_blank",role:"button"},s.a.createElement(o.a,{className:"mr-4"},"link"),"Reference")),content:s.a.createElement("div",{className:"p-24 max-w-2xl"},s.a.createElement(r.a,{className:"text-44 mt-32 mb-8",component:"h1"},"Autocomplete"),s.a.createElement(r.a,{className:"description"},"The autocomplete is a normal text input enhanced by a panel of suggested options."),s.a.createElement(r.a,{className:"mb-16",component:"div"},"Material-UI doesn't provide any high-level API for solving this problem. We encourage people relying on the solutions the React community has built."),s.a.createElement(r.a,{className:"text-32 mt-32 mb-8",component:"h2"},"downshift"),s.a.createElement(r.a,{className:"mb-16",component:"div"},' src="https://img.shields.io/github/stars/paypal/downshift.svg?style=social&label=Stars" alt="stars/> src="https://img.shields.io/npm/dm/downshift.svg" alt="npm downloads/>'),s.a.createElement(r.a,{className:"mb-16",component:"div"},"In the following example, we demonstrate how to use ",s.a.createElement("a",{href:"https://github.com/downshift-js/downshift"},"downshift"),"."),s.a.createElement(r.a,{className:"mb-16",component:"div"},"The last demo allows the user to clear the input and show a number of options on focus."),s.a.createElement(r.a,{className:"mb-16",component:"div"},s.a.createElement(l.j,{className:"my-24",iframe:!1,component:t(1425).default,raw:t(1426)})),s.a.createElement(r.a,{className:"text-32 mt-32 mb-8",component:"h2"},"react-select"),s.a.createElement(r.a,{className:"mb-16",component:"div"},' src="https://img.shields.io/github/stars/JedWatson/react-select.svg?style=social&label=Stars" alt="stars/> src="https://img.shields.io/npm/dm/react-select.svg" alt="npm downloads/>'),s.a.createElement(r.a,{className:"mb-16",component:"div"},"In the following example, we demonstrate how to use ",s.a.createElement("a",{href:"https://github.com/JedWatson/react-select"},"react-select"),"."),s.a.createElement(r.a,{className:"mb-16",component:"div"},s.a.createElement(l.j,{className:"my-24",iframe:!1,component:t(1427).default,raw:t(1429)})),s.a.createElement(r.a,{className:"text-32 mt-32 mb-8",component:"h2"},"react-autosuggest"),s.a.createElement(r.a,{className:"mb-16",component:"div"},' src="https://img.shields.io/github/stars/moroshko/react-autosuggest.svg?style=social&label=Stars" alt="stars/> src="https://img.shields.io/npm/dm/react-autosuggest.svg" alt="npm downloads/>'),s.a.createElement(r.a,{className:"mb-16",component:"div"},"In the following example, we demonstrate how to use ",s.a.createElement("a",{href:"https://github.com/moroshko/react-autosuggest"},"react-autosuggest"),". It's also using ",s.a.createElement("a",{href:"https://www.npmjs.com/package/autosuggest-highlight"},"autosuggest-highlight")," for the highlighting logic."),s.a.createElement(r.a,{className:"mb-16",component:"div"},s.a.createElement(l.j,{className:"my-24",iframe:!1,component:t(1430).default,raw:t(1431)})))})}}}]);